"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("./_tslib-3b318919.js"),t=require("fs"),r=require("yargs");function i(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(r){if("default"!==r){var i=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,i.get?i:{enumerable:!0,get:function(){return e[r]}})}})),t.default=e,Object.freeze(t)}require("react"),require("@mui/material/Avatar"),require("chance"),require("@mui/material/colors"),require("@mui/styles"),require("@mui/material/Tooltip"),require("@mui/icons-material/Info"),require("clsx"),require("@mui/material/styles"),require("@mui/material/Rating"),require("@mui/icons-material/ReportProblem"),require("@mui/icons-material/Autorenew"),require("@mui/icons-material/Done"),require("@mui/material/Chip"),require("@mui/material/Autocomplete"),require("@mui/material/InputBase"),require("@mui/material/Slider"),require("@mui/material/utils"),require("@mui/material/Select"),require("@mui/material/MenuItem"),require("@mui/material/ListItemIcon"),require("@mui/material/ListItemText");var a=i(t),u=i(r);exports.datagenCli=function(){u.command({command:"$0",describe:"Generates Component.propTypes from TypeScript declarations",builder:e=>e.option("dataset",{default:"",describe:'A dataset can be "commodity" | "employee"',type:"string"}).option("output",{default:"",describe:'The output file, if not passed, it will generate "./<dataset>-<size>.json"',type:"string"}).option("pretty",{default:!1,describe:"Print a prettier output",type:"boolean"}).option("size",{default:"1000",describe:"The number of rows to generate",type:"string"}),handler:t=>{var r,i;console.log(`Generating new ${t.dataset} dataset with ${Number(t.size).toLocaleString()} rows`),(r=Number(t.size),i=t.dataset,e.__awaiter(void 0,void 0,void 0,(function*(){return(yield e.getRealGridData(Number(r),"commodity"===i.toLowerCase()?e.getCommodityColumns():e.getEmployeeColumns())).rows}))).then((e=>{const r=t.output?t.output:`./${t.dataset}-${t.size}.json`;console.log(`Saving generated dataset in ${r}`),a.writeFileSync(r,JSON.stringify(e,null,t.pretty?2:void 0))}))}}).help().strict(!0).version(!1).parse()};
