{"ast":null,"code":"var _jsxFileName = \"/Users/atheer/Desktop/Devteams/frontend/src/components/Pages/Projects/ProjectCRUD/UpdateProject/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router\";\nimport { toast } from \"react-toastify\";\nimport Button from \"@mui/material/Button\";\nimport Nav from \"../../../../Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdateProject = _ref => {\n  _s();\n\n  let {\n    projects,\n    updateProject\n  } = _ref;\n  const {\n    id\n  } = useParams(); //   const history = useHistory();\n\n  const navigate = useNavigate();\n  const currentProject = projects.find(project => project.id === parseInt(id));\n  useEffect(() => {\n    setName(currentProject.name);\n    setType(currentProject.type);\n    setDesc(currentProject.desc);\n    setTeamNeeded(currentProject.teamNeeded);\n    setLevel(currentProject.level);\n    setLocation(currentProject.location);\n  }, [currentProject]);\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [teamNeeded, setTeamNeeded] = useState(\"\");\n  const [level, setLevel] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const checkProjectNameExists = projects.filter(project => project.name === name && project.id !== currentProject.id ? project : null);\n\n    if (!type || !name || !desc || !teamNeeded || !level || !location) {\n      return toast.warning(\"Please fill in all fields!!\");\n    }\n\n    if (checkProjectNameExists.length > 0) {\n      return toast.error(\"This project name already exists!!\");\n    }\n\n    const data = {\n      id: currentProject.id,\n      desc,\n      name,\n      level,\n      teamNeeded,\n      location,\n      type\n    };\n    updateProject(data);\n    toast.success(\"Project updated successfully!!\");\n    navigate(\"/myprojects\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingTop: \"150px\",\n        paddingBottom: \"150px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row d-flex flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center py-3 display-2\",\n          style: {\n            fontSize: \"40px\",\n            fontWeight: \"600\",\n            color: \"#00468B\"\n          },\n          children: \"Add Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 mx-auto shadow p-5\",\n          children: currentProject ? /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                value: name,\n                placeholder: \"Project Name\",\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                value: desc,\n                placeholder: \"Description\",\n                onChange: e => setDesc(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                value: type,\n                placeholder: \"Project Type\",\n                onChange: e => setType(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                value: teamNeeded,\n                placeholder: \"Teem needed\",\n                onChange: e => setTeamNeeded(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                value: location,\n                placeholder: \"Where are you\",\n                onChange: e => setLocation(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                value: level,\n                placeholder: \"Whats the level of project?\",\n                onChange: e => setLevel(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group d-flex align-items-center justify-content-between my-2\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                sx: {\n                  \":hover\": {\n                    bgcolor: \"#e4a300\"\n                  },\n                  maxWidth: \"180px\",\n                  maxHeight: \"30px\",\n                  minWidth: \"180px\",\n                  minHeight: \"30px\",\n                  mt: 3,\n                  mb: 2,\n                  backgroundColor: \"#FFB703\"\n                },\n                children: \"Update Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                sx: {\n                  \":hover\": {\n                    bgcolor: \"#e4a300\"\n                  },\n                  maxWidth: \"180px\",\n                  maxHeight: \"30px\",\n                  minWidth: \"180px\",\n                  minHeight: \"30px\",\n                  mt: 3,\n                  mb: 2,\n                  backgroundColor: \"#FFB703\"\n                },\n                onClick: () => navigate(\"/myprojects\"),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center\",\n            children: \"No Project Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UpdateProject, \"61TBDyE+uVjcNTfwJ1y7bnT5Amw=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = UpdateProject;\n\nconst mapStateToProps = state => ({\n  projects: state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateProject: data => {\n    dispatch({\n      type: \"UPDATE_PROJECT\",\n      payload: data\n    });\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateProject);\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProject\");","map":{"version":3,"sources":["/Users/atheer/Desktop/Devteams/frontend/src/components/Pages/Projects/ProjectCRUD/UpdateProject/index.js"],"names":["React","useEffect","useState","connect","useNavigate","useParams","toast","Button","Nav","UpdateProject","projects","updateProject","id","navigate","currentProject","find","project","parseInt","setName","name","setType","type","setDesc","desc","setTeamNeeded","teamNeeded","setLevel","level","setLocation","location","handleSubmit","e","preventDefault","checkProjectNameExists","filter","warning","length","error","data","success","paddingTop","paddingBottom","fontSize","fontWeight","color","target","value","bgcolor","maxWidth","maxHeight","minWidth","minHeight","mt","mb","backgroundColor","mapStateToProps","state","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router\";\nimport { toast } from \"react-toastify\";\nimport Button from \"@mui/material/Button\";\nimport Nav from \"../../../../Nav\"\nconst UpdateProject = ({ projects, updateProject }) => {\n  const { id } = useParams();\n  //   const history = useHistory();\n  const navigate = useNavigate();\n\n  const currentProject = projects.find(\n    (project) => project.id === parseInt(id)\n  );\n\n  useEffect(() => {\n    setName(currentProject.name);\n    setType(currentProject.type);\n    setDesc(currentProject.desc);\n    setTeamNeeded(currentProject.teamNeeded);\n    setLevel(currentProject.level);\n    setLocation(currentProject.location);\n  }, [currentProject]);\n\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [teamNeeded, setTeamNeeded] = useState(\"\");\n  const [level, setLevel] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const checkProjectNameExists = projects.filter((project) =>\n      project.name === name && project.id !== currentProject.id ? project : null\n    );\n\n    if (!type || !name || !desc || !teamNeeded || !level || !location) {\n      return toast.warning(\"Please fill in all fields!!\");\n    }\n    if (checkProjectNameExists.length > 0) {\n      return toast.error(\"This project name already exists!!\");\n    }\n\n    const data = {\n      id: currentProject.id,\n      desc,\n      name,\n      level,\n      teamNeeded,\n      location,\n      type,\n    };\n\n    updateProject(data);\n    toast.success(\"Project updated successfully!!\");\n    navigate(\"/myprojects\");\n  };\n\n  return (\n    <>\n    <Nav />\n      <div style={{paddingTop:\"150px\", paddingBottom:\"150px\"}}>\n        <div className=\"row d-flex flex-column\">\n        <h1 className=\"text-center py-3 display-2\" style={{fontSize:\"40px\", fontWeight:\"600\", color:\"#00468B\"}}>Add Project</h1>\n\n          {/* <button\n          className=\"btn btn-dark ml-auto my-5\"\n          onClick={() => navigate(\"/myprojects\")}\n        >\n          Go back\n        </button> */}\n          {/* <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{\n              \":hover\": {\n                bgcolor: \"#e4a300\",\n              },\n              maxWidth: \"180px\",\n              maxHeight: \"30px\",\n              minWidth: \"180px\",\n              minHeight: \"30px\",\n              mt: 3,\n              mb: 2,\n              backgroundColor: \"#FFB703\",\n              marginLeft: \"550px\",\n            }}\n            onClick={() => navigate(\"/myprojects\")}\n          >\n            Go back\n          </Button> */}\n\n          <div className=\"col-md-6 mx-auto shadow p-5\">\n            {currentProject ? (\n              <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    className=\"form-control\"\n                    value={name}\n                    placeholder={\"Project Name\"}\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    className=\"form-control\"\n                    value={desc}\n                    placeholder={\"Description\"}\n                    onChange={(e) => setDesc(e.target.value)}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    className=\"form-control\"\n                    value={type}\n                    placeholder={\"Project Type\"}\n                    onChange={(e) => setType(e.target.value)}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    className=\"form-control\"\n                    value={teamNeeded}\n                    placeholder={\"Teem needed\"}\n                    onChange={(e) => setTeamNeeded(e.target.value)}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    className=\"form-control\"\n                    value={location}\n                    placeholder={\"Where are you\"}\n                    onChange={(e) => setLocation(e.target.value)}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    className=\"form-control\"\n                    value={level}\n                    placeholder={\"Whats the level of project?\"}\n                    onChange={(e) => setLevel(e.target.value)}\n                  />\n                </div>\n                <div className=\"form-group d-flex align-items-center justify-content-between my-2\">\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    sx={{\n                      \":hover\": {\n                        bgcolor: \"#e4a300\",\n                      },\n                      maxWidth: \"180px\",\n                      maxHeight: \"30px\",\n                      minWidth: \"180px\",\n                      minHeight: \"30px\",\n\n                      mt: 3,\n                      mb: 2,\n                      backgroundColor: \"#FFB703\",\n                    }}\n                  >\n                    Update Project\n                  </Button>\n\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    sx={{\n                      \":hover\": {\n                        bgcolor: \"#e4a300\",\n                      },\n                      maxWidth: \"180px\",\n                      maxHeight: \"30px\",\n                      minWidth: \"180px\",\n                      minHeight: \"30px\",\n                      mt: 3,\n                      mb: 2,\n                      backgroundColor: \"#FFB703\",\n                    }}\n                    onClick={() => navigate(\"/myprojects\")}\n                  >\n                    Cancel\n                  </Button>\n                </div>\n              </form>\n            ) : (\n              <h1 className=\"text-center\">No Project Found</h1>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  projects: state,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  updateProject: (data) => {\n    dispatch({ type: \"UPDATE_PROJECT\", payload: data });\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateProject);\n"]},"metadata":{},"sourceType":"module"}