{"ast":null,"code":"var _jsxFileName = \"/Users/atheer/Desktop/Devteams/frontend/src/components/Pages/Projects/ProjectCRUD/UpdateProject/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router\";\nimport { toast } from \"react-toastify\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport Nav from \"../../../../Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdateProject = _ref => {\n  _s();\n\n  let {\n    projects,\n    updateProject\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [teamNeeded, setTeamNeeded] = useState(\"\");\n  const [level, setLevel] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [isEmpty, setIsEmpty] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const currentProject = projects.find(project => project.id === parseInt(id));\n  useEffect(() => {\n    setName(currentProject.name);\n    setType(currentProject.type);\n    setDesc(currentProject.desc);\n    setTeamNeeded(currentProject.teamNeeded);\n    setLevel(currentProject.level);\n    setLocation(currentProject.location);\n  }, [currentProject]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const checkProjectNameExists = projects.filter(project => project.name === name && project.id !== currentProject.id ? project : null);\n\n    if (!type || !name || !desc || !teamNeeded || !level || !location) {\n      return toast.warning(\"Please fill in all fields!!\");\n    }\n\n    if (checkProjectNameExists.length > 0) {\n      return toast.error(\"This project name already exists!!\");\n    }\n\n    const data = {\n      id: currentProject.id,\n      desc,\n      name,\n      level,\n      teamNeeded,\n      location,\n      type\n    };\n    updateProject(data);\n    toast.success(\"Project updated successfully!!\");\n    navigate(\"/myprojects\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      sx: {\n        paddingTop: \"99px\",\n        paddingBottom: \"99px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            fontFamily: \"Comfortaa\",\n            color: \"#00468B\",\n            fontWeight: \"800\",\n            fontSize: \"40px\",\n            marginBottom: \"30px\"\n          },\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Update Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          onSubmit: e => {\n            if (isEmpty) {\n              e.preventDefault();\n              setIsEmpty(true);\n              setIsError(true);\n            } else {\n              setIsEmpty(false);\n            }\n          },\n          sx: {\n            width: 500,\n            maxWidth: \"100%\"\n          },\n          children: currentProject ? /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  value: name,\n                  fullWidth: true,\n                  label: \"Project name\",\n                  error: isError,\n                  required: true,\n                  autoFocus: true,\n                  onChange: e => {\n                    setName(e.target.value);\n\n                    if (name.length !== 0) {\n                      setIsEmpty(false);\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  value: desc,\n                  fullWidth: true,\n                  label: \"Project idea\",\n                  error: isError,\n                  required: true,\n                  onChange: e => {\n                    setDesc(e.target.value);\n\n                    if (desc.length !== 0) {\n                      setIsEmpty(false);\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  value: type,\n                  fullWidth: true,\n                  label: \"Project type\",\n                  error: isError,\n                  required: true,\n                  onChange: e => {\n                    setType(e.target.value);\n\n                    if (type.length !== 0) {\n                      setIsEmpty(false);\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  value: location,\n                  onChange: (event, newValue) => {\n                    setLocation(newValue);\n                  },\n                  options: countries,\n                  autoHighlight: true,\n                  renderOption: (props, option) => /*#__PURE__*/_jsxDEV(Box, {\n                    component: \"li\",\n                    sx: {\n                      \"& > img\": {\n                        mr: 2,\n                        flexShrink: 0\n                      }\n                    },\n                    ...props,\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      loading: \"lazy\",\n                      width: \"20\",\n                      src: `https://flagcdn.com/w20/${option.code.toLowerCase()}.png`,\n                      srcSet: `https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`,\n                      alt: \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 27\n                    }, this), option.label]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 25\n                  }, this),\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    label: \"Where are from\",\n                    inputProps: { ...params.inputProps,\n                      autoComplete: \"new-password\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  value: teamNeeded,\n                  fullWidth: true,\n                  label: \"Number of teammates\",\n                  error: isError,\n                  required: true,\n                  onChange: e => {\n                    setTeamNeeded(e.target.value);\n\n                    if (teamNeeded.length !== 0) {\n                      setIsEmpty(false);\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  value: level,\n                  fullWidth: true,\n                  label: \"Level of your project\",\n                  error: isError,\n                  required: true,\n                  onChange: e => {\n                    setLevel(e.target.value);\n\n                    if (level.length !== 0) {\n                      setIsEmpty(false);\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group d-flex align-items-center justify-content-between my-2\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                sx: {\n                  \":hover\": {\n                    bgcolor: \"#e4a300\"\n                  },\n                  maxWidth: \"180px\",\n                  maxHeight: \"30px\",\n                  minWidth: \"180px\",\n                  minHeight: \"30px\",\n                  mt: 3,\n                  mb: 2,\n                  backgroundColor: \"#FFB703\"\n                },\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                sx: {\n                  \":hover\": {\n                    bgcolor: \"#e4a300\"\n                  },\n                  maxWidth: \"180px\",\n                  maxHeight: \"30px\",\n                  minWidth: \"180px\",\n                  minHeight: \"30px\",\n                  mt: 3,\n                  mb: 2,\n                  backgroundColor: \"#FFB703\"\n                },\n                onClick: () => navigate(\"/myprojects\"),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center\",\n            children: \"No Project Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UpdateProject, \"+5tp608h2g4SUrLOo3qLvduAPaw=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = UpdateProject;\n\nconst mapStateToProps = state => ({\n  projects: state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateProject: data => {\n    dispatch({\n      type: \"UPDATE_PROJECT\",\n      payload: data\n    });\n  }\n});\n\nconst projectsType = [\"Web Application\", \"Android Application\", \"IOS Application\", \"Security System\", \"UI\", \"UX\"];\nconst con = [\"AE\", \"United Arab Emirates\"];\nconst countries = [{\n  code: \"AE\",\n  label: \"United Arab Emirates\"\n}, {\n  code: \"AF\",\n  label: \"Afghanistan\"\n}, {\n  code: \"AL\",\n  label: \"Albania\"\n}, {\n  code: \"AR\",\n  label: \"Argentina\"\n}, {\n  code: \"AT\",\n  label: \"Austria\"\n}, {\n  code: \"AU\",\n  label: \"Australia\",\n  suggested: true\n}, {\n  code: \"BA\",\n  label: \"Bosnia and Herzegovina\"\n}, {\n  code: \"BD\",\n  label: \"Bangladesh\"\n}, {\n  code: \"BG\",\n  label: \"Bulgaria\"\n}, {\n  code: \"BH\",\n  label: \"Bahrain\"\n}, {\n  code: \"BR\",\n  label: \"Brazil\"\n}, {\n  code: \"BS\",\n  label: \"Bahamas\"\n}, {\n  code: \"CA\",\n  label: \"Canada\",\n  suggested: true\n}, {\n  code: \"CH\",\n  label: \"Switzerland\"\n}, {\n  code: \"CL\",\n  label: \"Chile\"\n}, {\n  code: \"CM\",\n  label: \"Cameroon\"\n}, {\n  code: \"CN\",\n  label: \"China\"\n}, {\n  code: \"CO\",\n  label: \"Colombia\"\n}, {\n  code: \"CR\",\n  label: \"Costa Rica\"\n}, {\n  code: \"CU\",\n  label: \"Cuba\"\n}, {\n  code: \"DE\",\n  label: \"Germany\",\n  suggested: true\n}, {\n  code: \"EG\",\n  label: \"Egypt\"\n}, {\n  code: \"ES\",\n  label: \"Spain\"\n}, {\n  code: \"ET\",\n  label: \"Ethiopia\"\n}, {\n  code: \"FR\",\n  label: \"France\",\n  suggested: true\n}, {\n  code: \"GB\",\n  label: \"United Kingdom\"\n}, {\n  code: \"GE\",\n  label: \"Georgia\"\n}, {\n  code: \"GH\",\n  label: \"Ghana\"\n}, {\n  code: \"GL\",\n  label: \"Greenland\"\n}, {\n  code: \"GR\",\n  label: \"Greece\"\n}, {\n  code: \"GT\",\n  label: \"Guatemala\"\n}, {\n  code: \"HK\",\n  label: \"Hong Kong\"\n}, {\n  code: \"ID\",\n  label: \"Indonesia\"\n}, {\n  code: \"IN\",\n  label: \"India\"\n}, {\n  code: \"IQ\",\n  label: \"Iraq\"\n}, {\n  code: \"IT\",\n  label: \"Italy\"\n}, {\n  code: \"JM\",\n  label: \"Jamaica\"\n}, {\n  code: \"JO\",\n  label: \"Jordan\"\n}, {\n  code: \"JP\",\n  label: \"Japan\",\n  suggested: true\n}, {\n  code: \"KH\",\n  label: \"Cambodia\"\n}, {\n  code: \"KR\",\n  label: \"Korea, Republic of\"\n}, {\n  code: \"KW\",\n  label: \"Kuwait\"\n}, {\n  code: \"KZ\",\n  label: \"Kazakhstan\"\n}, {\n  code: \"LB\",\n  label: \"Lebanon\"\n}, {\n  code: \"MA\",\n  label: \"Morocco\"\n}, {\n  code: \"MG\",\n  label: \"Madagascar\"\n}, {\n  code: \"ML\",\n  label: \"Mali\"\n}, {\n  code: \"MV\",\n  label: \"Maldives\"\n}, {\n  code: \"MX\",\n  label: \"Mexico\"\n}, {\n  code: \"MY\",\n  label: \"Malaysia\"\n}, {\n  code: \"MZ\",\n  label: \"Mozambique\"\n}, {\n  code: \"NA\",\n  label: \"Namibia\"\n}, {\n  code: \"NE\",\n  label: \"Niger\"\n}, {\n  code: \"NG\",\n  label: \"Nigeria\"\n}, {\n  code: \"NL\",\n  label: \"Netherlands\"\n}, {\n  code: \"NO\",\n  label: \"Norway\"\n}, {\n  code: \"NP\",\n  label: \"Nepal\"\n}, {\n  code: \"NZ\",\n  label: \"New Zealand\"\n}, {\n  code: \"OM\",\n  label: \"Oman\"\n}, {\n  code: \"PE\",\n  label: \"Peru\"\n}, {\n  code: \"PH\",\n  label: \"Philippines\"\n}, {\n  code: \"PK\",\n  label: \"Pakistan\"\n}, {\n  code: \"PL\",\n  label: \"Poland\"\n}, {\n  code: \"PS\",\n  label: \"Palestine, State of\"\n}, {\n  code: \"PT\",\n  label: \"Portugal\"\n}, {\n  code: \"QA\",\n  label: \"Qatar\"\n}, {\n  code: \"RO\",\n  label: \"Romania\"\n}, {\n  code: \"RS\",\n  label: \"Serbia\"\n}, {\n  code: \"RU\",\n  label: \"Russian Federation\"\n}, {\n  code: \"SA\",\n  label: \"Saudi Arabia\"\n}, {\n  code: \"SD\",\n  label: \"Sudan\"\n}, {\n  code: \"SE\",\n  label: \"Sweden\"\n}, {\n  code: \"SG\",\n  label: \"Singapore\"\n}, {\n  code: \"SK\",\n  label: \"Slovakia\"\n}, {\n  code: \"SY\",\n  label: \"Syrian Arab Republic\"\n}, {\n  code: \"SZ\",\n  label: \"Swaziland\"\n}, {\n  code: \"TD\",\n  label: \"Chad\"\n}, {\n  code: \"TH\",\n  label: \"Thailand\"\n}, {\n  code: \"TN\",\n  label: \"Tunisia\"\n}, {\n  code: \"TR\",\n  label: \"Turkey\"\n}, {\n  code: \"TW\",\n  label: \"Taiwan, Province of China\"\n}, {\n  code: \"UA\",\n  label: \"Ukraine\"\n}, {\n  code: \"UG\",\n  label: \"Uganda\"\n}, {\n  code: \"US\",\n  label: \"United States\",\n  suggested: true\n}, {\n  code: \"UY\",\n  label: \"Uruguay\"\n}, {\n  code: \"UZ\",\n  label: \"Uzbekistan\"\n}, {\n  code: \"VE\",\n  label: \"Venezuela\"\n}, {\n  code: \"VN\",\n  label: \"Vietnam\"\n}, {\n  code: \"YE\",\n  label: \"Yemen\"\n}];\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateProject);\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProject\");","map":{"version":3,"sources":["/Users/atheer/Desktop/Devteams/frontend/src/components/Pages/Projects/ProjectCRUD/UpdateProject/index.js"],"names":["React","useEffect","useState","connect","useNavigate","useParams","toast","Button","Box","TextField","Container","Grid","Typography","Autocomplete","Nav","UpdateProject","projects","updateProject","name","setName","type","setType","desc","setDesc","teamNeeded","setTeamNeeded","level","setLevel","location","setLocation","isEmpty","setIsEmpty","isError","setIsError","id","navigate","currentProject","find","project","parseInt","handleSubmit","e","preventDefault","checkProjectNameExists","filter","warning","length","error","data","success","paddingTop","paddingBottom","marginTop","display","flexDirection","alignItems","fontFamily","color","fontWeight","fontSize","marginBottom","width","maxWidth","target","value","event","newValue","countries","props","option","mr","flexShrink","code","toLowerCase","label","params","inputProps","autoComplete","bgcolor","maxHeight","minWidth","minHeight","mt","mb","backgroundColor","mapStateToProps","state","mapDispatchToProps","dispatch","payload","projectsType","con","suggested"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router\";\nimport { toast } from \"react-toastify\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\n\nimport Nav from \"../../../../Nav\";\nconst UpdateProject = ({ projects, updateProject }) => {\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [teamNeeded, setTeamNeeded] = useState(\"\");\n  const [level, setLevel] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [isEmpty, setIsEmpty] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const currentProject = projects.find(\n    (project) => project.id === parseInt(id)\n  );\n\n  useEffect(() => {\n    setName(currentProject.name);\n    setType(currentProject.type);\n    setDesc(currentProject.desc);\n    setTeamNeeded(currentProject.teamNeeded);\n    setLevel(currentProject.level);\n    setLocation(currentProject.location);\n  }, [currentProject]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const checkProjectNameExists = projects.filter((project) =>\n      project.name === name && project.id !== currentProject.id ? project : null\n    );\n\n    if (!type || !name || !desc || !teamNeeded || !level || !location) {\n      return toast.warning(\"Please fill in all fields!!\");\n    }\n    if (checkProjectNameExists.length > 0) {\n      return toast.error(\"This project name already exists!!\");\n    }\n\n    const data = {\n      id: currentProject.id,\n      desc,\n      name,\n      level,\n      teamNeeded,\n      location,\n      type,\n    };\n\n    updateProject(data);\n    toast.success(\"Project updated successfully!!\");\n    navigate(\"/myprojects\");\n  };\n\n  return (\n    <>\n      <Nav />\n\n      <Container\n        component=\"main\"\n        maxWidth=\"xs\"\n        sx={{ paddingTop: \"99px\", paddingBottom: \"99px\" }}\n      >\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography\n            sx={{\n              fontFamily: \"Comfortaa\",\n              color: \"#00468B\",\n              fontWeight: \"800\",\n              fontSize: \"40px\",\n              marginBottom: \"30px\",\n            }}\n            component=\"h1\"\n            variant=\"h5\"\n          >\n            Update Project\n          </Typography>\n          <Box\n            onSubmit={(e) => {\n              if (isEmpty) {\n                e.preventDefault();\n                setIsEmpty(true);\n                setIsError(true);\n              } else {\n                setIsEmpty(false);\n              }\n            }}\n            sx={{\n              width: 500,\n              maxWidth: \"100%\",\n            }}\n          >\n            {currentProject ? (\n              <form onSubmit={handleSubmit}>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={12}>\n                    <TextField\n                      value={name}\n                      fullWidth\n                      label=\"Project name\"\n                      error={isError}\n                      required\n                      autoFocus\n                      onChange={(e) => {\n                        setName(e.target.value);\n                        if (name.length !== 0) {\n                          setIsEmpty(false);\n                        }\n                      }}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} sm={12}>\n                    <TextField\n                      value={desc}\n                      fullWidth\n                      label=\"Project idea\"\n                      error={isError}\n                      required\n                      onChange={(e) => {\n                        setDesc(e.target.value);\n                        if (desc.length !== 0) {\n                          setIsEmpty(false);\n                        }\n                      }}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} sm={12}>\n                    <TextField\n                      value={type}\n                      fullWidth\n                      label=\"Project type\"\n                      error={isError}\n                      required\n                      onChange={(e) => {\n                        setType(e.target.value);\n                        if (type.length !== 0) {\n                          setIsEmpty(false);\n                        }\n                      }}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} sm={12}>\n                    <Autocomplete\n                      value={location}\n                      onChange={(event, newValue) => {\n                        setLocation(newValue);\n                      }}\n                      options={countries}\n                      autoHighlight\n                      renderOption={(props, option) => (\n                        <Box\n                          component=\"li\"\n                          sx={{ \"& > img\": { mr: 2, flexShrink: 0 } }}\n                          {...props}\n                        >\n                          <img\n                            loading=\"lazy\"\n                            width=\"20\"\n                            src={`https://flagcdn.com/w20/${option.code.toLowerCase()}.png`}\n                            srcSet={`https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`}\n                            alt=\"\"\n                          />\n                          {option.label}\n                        </Box>\n                      )}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          label=\"Where are from\"\n                          inputProps={{\n                            ...params.inputProps,\n                            autoComplete: \"new-password\",\n                          }}\n                        />\n                      )}\n                    />\n\n                    {/* <Autocomplete\n                    value={type}\n                    onChange={(event, newValue) => {\n                      setType(newValue);\n                    }}\n                    options={projectsType}\n                    renderInput={(params) => (\n                      <TextField {...params} label=\"Project type\" />\n                    )}\n                  /> */}\n                    {/* <TextField\n                      value={location}\n                      fullWidth\n                      label=\"Where are from\"\n                      error={isError}\n                      required\n                      onChange={(e) => {\n                        setLocation(e.target.value);\n                        if (location.length !== 0) {\n                          setIsEmpty(false);\n                        }\n                      }}\n                    /> */}\n                  </Grid>\n\n                  <Grid item xs={12} sm={12}>\n                    <TextField\n                      value={teamNeeded}\n                      fullWidth\n                      label=\"Number of teammates\"\n                      error={isError}\n                      required\n                      onChange={(e) => {\n                        setTeamNeeded(e.target.value);\n                        if (teamNeeded.length !== 0) {\n                          setIsEmpty(false);\n                        }\n                      }}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} sm={12}>\n                    <TextField\n                      value={level}\n                      fullWidth\n                      label=\"Level of your project\"\n                      error={isError}\n                      required\n                      onChange={(e) => {\n                        setLevel(e.target.value);\n                        if (level.length !== 0) {\n                          setIsEmpty(false);\n                        }\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n                <div className=\"form-group d-flex align-items-center justify-content-between my-2\">\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    sx={{\n                      \":hover\": {\n                        bgcolor: \"#e4a300\",\n                      },\n                      maxWidth: \"180px\",\n                      maxHeight: \"30px\",\n                      minWidth: \"180px\",\n                      minHeight: \"30px\",\n\n                      mt: 3,\n                      mb: 2,\n                      backgroundColor: \"#FFB703\",\n                    }}\n                  >\n                    Update\n                  </Button>\n\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    sx={{\n                      \":hover\": {\n                        bgcolor: \"#e4a300\",\n                      },\n                      maxWidth: \"180px\",\n                      maxHeight: \"30px\",\n                      minWidth: \"180px\",\n                      minHeight: \"30px\",\n                      mt: 3,\n                      mb: 2,\n                      backgroundColor: \"#FFB703\",\n                    }}\n                    onClick={() => navigate(\"/myprojects\")}\n                  >\n                    Cancel\n                  </Button>\n                </div>\n              </form>\n            ) : (\n              <h1 className=\"text-center\">No Project Found</h1>\n            )}\n          </Box>\n        </Box>\n      </Container>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  projects: state,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  updateProject: (data) => {\n    dispatch({ type: \"UPDATE_PROJECT\", payload: data });\n  },\n});\n\nconst projectsType = [\n  \"Web Application\",\n  \"Android Application\",\n  \"IOS Application\",\n  \"Security System\",\n  \"UI\",\n  \"UX\",\n];\n\nconst con = [\"AE\", \"United Arab Emirates\"];\n\nconst countries = [\n  {\n    code: \"AE\",\n    label: \"United Arab Emirates\",\n  },\n  { code: \"AF\", label: \"Afghanistan\" },\n  { code: \"AL\", label: \"Albania\" },\n  { code: \"AR\", label: \"Argentina\" },\n  { code: \"AT\", label: \"Austria\" },\n  {\n    code: \"AU\",\n    label: \"Australia\",\n    suggested: true,\n  },\n  {\n    code: \"BA\",\n    label: \"Bosnia and Herzegovina\",\n  },\n  { code: \"BD\", label: \"Bangladesh\" },\n  { code: \"BG\", label: \"Bulgaria\" },\n  { code: \"BH\", label: \"Bahrain\" },\n  { code: \"BR\", label: \"Brazil\" },\n  { code: \"BS\", label: \"Bahamas\" },\n  {\n    code: \"CA\",\n    label: \"Canada\",\n    suggested: true,\n  },\n  { code: \"CH\", label: \"Switzerland\" },\n  { code: \"CL\", label: \"Chile\" },\n  { code: \"CM\", label: \"Cameroon\" },\n  { code: \"CN\", label: \"China\" },\n  { code: \"CO\", label: \"Colombia\" },\n  { code: \"CR\", label: \"Costa Rica\" },\n  { code: \"CU\", label: \"Cuba\" },\n  {\n    code: \"DE\",\n    label: \"Germany\",\n    suggested: true,\n  },\n  { code: \"EG\", label: \"Egypt\" },\n  { code: \"ES\", label: \"Spain\" },\n  { code: \"ET\", label: \"Ethiopia\" },\n  {\n    code: \"FR\",\n    label: \"France\",\n    suggested: true,\n  },\n  { code: \"GB\", label: \"United Kingdom\" },\n  { code: \"GE\", label: \"Georgia\" },\n  { code: \"GH\", label: \"Ghana\" },\n  { code: \"GL\", label: \"Greenland\" },\n  { code: \"GR\", label: \"Greece\" },\n  { code: \"GT\", label: \"Guatemala\" },\n  { code: \"HK\", label: \"Hong Kong\" },\n  { code: \"ID\", label: \"Indonesia\" },\n  { code: \"IN\", label: \"India\" },\n  { code: \"IQ\", label: \"Iraq\" },\n  { code: \"IT\", label: \"Italy\" },\n  { code: \"JM\", label: \"Jamaica\" },\n  { code: \"JO\", label: \"Jordan\" },\n  {\n    code: \"JP\",\n    label: \"Japan\",\n    suggested: true,\n  },\n  { code: \"KH\", label: \"Cambodia\" },\n  { code: \"KR\", label: \"Korea, Republic of\" },\n  { code: \"KW\", label: \"Kuwait\" },\n  { code: \"KZ\", label: \"Kazakhstan\" },\n  { code: \"LB\", label: \"Lebanon\" },\n  { code: \"MA\", label: \"Morocco\" },\n  { code: \"MG\", label: \"Madagascar\" },\n  { code: \"ML\", label: \"Mali\" },\n  { code: \"MV\", label: \"Maldives\" },\n  { code: \"MX\", label: \"Mexico\" },\n  { code: \"MY\", label: \"Malaysia\" },\n  { code: \"MZ\", label: \"Mozambique\" },\n  { code: \"NA\", label: \"Namibia\" },\n  { code: \"NE\", label: \"Niger\" },\n  { code: \"NG\", label: \"Nigeria\" },\n  { code: \"NL\", label: \"Netherlands\" },\n  { code: \"NO\", label: \"Norway\" },\n  { code: \"NP\", label: \"Nepal\" },\n  { code: \"NZ\", label: \"New Zealand\" },\n  { code: \"OM\", label: \"Oman\" },\n  { code: \"PE\", label: \"Peru\" },\n  { code: \"PH\", label: \"Philippines\" },\n  { code: \"PK\", label: \"Pakistan\" },\n  { code: \"PL\", label: \"Poland\" },\n  {\n    code: \"PS\",\n    label: \"Palestine, State of\",\n  },\n  { code: \"PT\", label: \"Portugal\" },\n  { code: \"QA\", label: \"Qatar\" },\n  { code: \"RO\", label: \"Romania\" },\n  { code: \"RS\", label: \"Serbia\" },\n  { code: \"RU\", label: \"Russian Federation\" },\n  { code: \"SA\", label: \"Saudi Arabia\" },\n  { code: \"SD\", label: \"Sudan\" },\n  { code: \"SE\", label: \"Sweden\" },\n  { code: \"SG\", label: \"Singapore\" },\n  { code: \"SK\", label: \"Slovakia\" },\n  {\n    code: \"SY\",\n    label: \"Syrian Arab Republic\",\n  },\n  { code: \"SZ\", label: \"Swaziland\" },\n  { code: \"TD\", label: \"Chad\" },\n  { code: \"TH\", label: \"Thailand\" },\n  { code: \"TN\", label: \"Tunisia\" },\n  { code: \"TR\", label: \"Turkey\" },\n  {\n    code: \"TW\",\n    label: \"Taiwan, Province of China\",\n  },\n  { code: \"UA\", label: \"Ukraine\" },\n  { code: \"UG\", label: \"Uganda\" },\n  {\n    code: \"US\",\n    label: \"United States\",\n    suggested: true,\n  },\n  { code: \"UY\", label: \"Uruguay\" },\n  { code: \"UZ\", label: \"Uzbekistan\" },\n  { code: \"VE\", label: \"Venezuela\" },\n  { code: \"VN\", label: \"Vietnam\" },\n  { code: \"YE\", label: \"Yemen\" },\n];\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateProject);\n"]},"metadata":{},"sourceType":"module"}