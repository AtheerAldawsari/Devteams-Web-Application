{"ast":null,"code":"var _jsxFileName = \"/Users/atheer/Desktop/Devteams/frontend/src/components/Pages/Projects/ProjectCRUD/AddProject/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport { toast } from \"react-toastify\";\nimport Nav from \"../../../../Nav\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Avatar from \"@mui/material/Avatar\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddProject = _ref => {\n  _s();\n\n  let {\n    projects,\n    addProject\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [teamNeeded, setTeamNeeded] = useState(\"\");\n  const [level, setLevel] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [isEmpty, setIsEmpty] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    console.log(isError);\n  }, [isError]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const checkProjectNameExists = projects.filter(project => project.name === name ? project : null);\n\n    if (!type || !name || !desc || !teamNeeded || !level || !location) {\n      return toast.warning(\"Please fill in all fields!!\");\n    }\n\n    if (checkProjectNameExists.length > 0) {\n      return toast.error(\"This project name already exists!!\");\n    }\n\n    const data = {\n      id: projects.length > 0 ? projects[projects.length - 1].id + 1 : 0,\n      desc,\n      name,\n      level,\n      teamNeeded,\n      location,\n      type\n    };\n    addProject(data);\n    toast.success(\"Your Request sent successfully!!\");\n    navigate(\"/myprojects\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      sx: {\n        paddingTop: \"105px\",\n        paddingBottom: \"100px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            fontFamily: \"Comfortaa\",\n            color: \"#00468B\",\n            fontWeight: \"800\",\n            fontSize: \"40px\",\n            marginBottom: \"30px\"\n          },\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Add Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          onSubmit: e => {\n            if (isEmpty) {\n              e.preventDefault();\n              setIsEmpty(true);\n              setIsError(true);\n            } else {\n              setIsEmpty(false);\n            }\n          },\n          sx: {\n            width: 500,\n            maxWidth: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Project Name\",\n                  id: \"fullWidth\",\n                  error: isError,\n                  autoComplete: \"given-name\",\n                  name: \"projectName\",\n                  required: true,\n                  autoFocus: true,\n                  onChange: e => {\n                    setName(e.target.value);\n\n                    if (name.length !== 0) {\n                      setIsEmpty(false);\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Project Type\",\n                  id: \"fullWidth\",\n                  error: isError,\n                  autoComplete: \"given-name\",\n                  name: \"projectDesc\",\n                  required: true,\n                  onChange: e => {\n                    setType(e.target.value);\n\n                    if (type.length !== 0) {\n                      setIsEmpty(false);\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Project Description\",\n                  id: \"fullWidth\",\n                  error: isError,\n                  autoComplete: \"given-name\",\n                  name: \"projectDesc\",\n                  required: true,\n                  onChange: e => {\n                    setDesc(e.target.value);\n\n                    if (desc.length !== 0) {\n                      setIsEmpty(false);\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Where are You From\",\n                  id: \"fullWidth\",\n                  error: isError,\n                  autoComplete: \"given-name\",\n                  name: \"projectDesc\",\n                  required: true,\n                  onChange: e => {\n                    setLocation(e.target.value);\n\n                    if (location.length !== 0) {\n                      setIsEmpty(false);\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Number of Team\",\n                  id: \"fullWidth\",\n                  error: isError,\n                  autoComplete: \"given-name\",\n                  name: \"teamNeeded\",\n                  required: true,\n                  onChange: e => {\n                    setTeamNeeded(e.target.value);\n\n                    if (teamNeeded.length !== 0) {\n                      setIsEmpty(false);\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Level of Your Project\",\n                  id: \"fullWidth\",\n                  error: isError,\n                  autoComplete: \"given-name\",\n                  name: \"level\",\n                  required: true,\n                  onChange: e => {\n                    setLevel(e.target.value);\n\n                    if (level.length !== 0) {\n                      setIsEmpty(false);\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              sx: {\n                \":hover\": {\n                  bgcolor: \"#e4a300\"\n                },\n                mt: 3,\n                mb: 2,\n                backgroundColor: \"#FFB703\"\n              },\n              children: \"Add Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddProject, \"X5V0rM7TYUXOWYoHHIrpzrkWCBA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AddProject;\n\nconst mapStateToProps = state => ({\n  projects: state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addProject: data => {\n    dispatch({\n      type: \"ADD_PROJECT\",\n      payload: data\n    });\n  }\n});\n\nconst top100Films = [{\n  label: 'The Shawshank Redemption',\n  year: 1994\n}, {\n  label: 'The Godfather',\n  year: 1972\n}, {\n  label: 'The Godfather: Part II',\n  year: 1974\n}, {\n  label: 'The Dark Knight',\n  year: 2008\n}, {\n  label: '12 Angry Men',\n  year: 1957\n}, {\n  label: \"Schindler's List\",\n  year: 1993\n}, {\n  label: 'Pulp Fiction',\n  year: 1994\n}, {\n  label: 'The Lord of the Rings: The Return of the King',\n  year: 2003\n}, {\n  label: 'The Good, the Bad and the Ugly',\n  year: 1966\n}, {\n  label: 'Fight Club',\n  year: 1999\n}, {\n  label: 'The Lord of the Rings: The Fellowship of the Ring',\n  year: 2001\n}, {\n  label: 'Star Wars: Episode V - The Empire Strikes Back',\n  year: 1980\n}, {\n  label: 'Forrest Gump',\n  year: 1994\n}, {\n  label: 'Inception',\n  year: 2010\n}, {\n  label: 'The Lord of the Rings: The Two Towers',\n  year: 2002\n}, {\n  label: \"One Flew Over the Cuckoo's Nest\",\n  year: 1975\n}, {\n  label: 'Goodfellas',\n  year: 1990\n}, {\n  label: 'The Matrix',\n  year: 1999\n}, {\n  label: 'Seven Samurai',\n  year: 1954\n}, {\n  label: 'Star Wars: Episode IV - A New Hope',\n  year: 1977\n}, {\n  label: 'City of God',\n  year: 2002\n}, {\n  label: 'Se7en',\n  year: 1995\n}, {\n  label: 'The Silence of the Lambs',\n  year: 1991\n}, {\n  label: \"It's a Wonderful Life\",\n  year: 1946\n}, {\n  label: 'Life Is Beautiful',\n  year: 1997\n}, {\n  label: 'The Usual Suspects',\n  year: 1995\n}, {\n  label: 'Léon: The Professional',\n  year: 1994\n}, {\n  label: 'Spirited Away',\n  year: 2001\n}, {\n  label: 'Saving Private Ryan',\n  year: 1998\n}, {\n  label: 'Once Upon a Time in the West',\n  year: 1968\n}, {\n  label: 'American History X',\n  year: 1998\n}, {\n  label: 'Interstellar',\n  year: 2014\n}, {\n  label: 'Casablanca',\n  year: 1942\n}, {\n  label: 'City Lights',\n  year: 1931\n}, {\n  label: 'Psycho',\n  year: 1960\n}, {\n  label: 'The Green Mile',\n  year: 1999\n}, {\n  label: 'The Intouchables',\n  year: 2011\n}, {\n  label: 'Modern Times',\n  year: 1936\n}, {\n  label: 'Raiders of the Lost Ark',\n  year: 1981\n}, {\n  label: 'Rear Window',\n  year: 1954\n}, {\n  label: 'The Pianist',\n  year: 2002\n}, {\n  label: 'The Departed',\n  year: 2006\n}, {\n  label: 'Terminator 2: Judgment Day',\n  year: 1991\n}, {\n  label: 'Back to the Future',\n  year: 1985\n}, {\n  label: 'Whiplash',\n  year: 2014\n}, {\n  label: 'Gladiator',\n  year: 2000\n}, {\n  label: 'Memento',\n  year: 2000\n}, {\n  label: 'The Prestige',\n  year: 2006\n}, {\n  label: 'The Lion King',\n  year: 1994\n}, {\n  label: 'Apocalypse Now',\n  year: 1979\n}, {\n  label: 'Alien',\n  year: 1979\n}, {\n  label: 'Sunset Boulevard',\n  year: 1950\n}, {\n  label: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n  year: 1964\n}, {\n  label: 'The Great Dictator',\n  year: 1940\n}, {\n  label: 'Cinema Paradiso',\n  year: 1988\n}, {\n  label: 'The Lives of Others',\n  year: 2006\n}, {\n  label: 'Grave of the Fireflies',\n  year: 1988\n}, {\n  label: 'Paths of Glory',\n  year: 1957\n}, {\n  label: 'Django Unchained',\n  year: 2012\n}];\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProject);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProject\");","map":{"version":3,"sources":["/Users/atheer/Desktop/Devteams/frontend/src/components/Pages/Projects/ProjectCRUD/AddProject/index.js"],"names":["React","useState","useEffect","connect","useNavigate","toast","Nav","Button","Box","TextField","Container","Grid","Typography","Avatar","AddIcon","AddProject","projects","addProject","name","setName","type","setType","desc","setDesc","teamNeeded","setTeamNeeded","level","setLevel","location","setLocation","isEmpty","setIsEmpty","isError","setIsError","navigate","console","log","handleSubmit","e","preventDefault","checkProjectNameExists","filter","project","warning","length","error","data","id","success","paddingTop","paddingBottom","marginTop","display","flexDirection","alignItems","fontFamily","color","fontWeight","fontSize","marginBottom","width","maxWidth","target","value","bgcolor","mt","mb","backgroundColor","mapStateToProps","state","mapDispatchToProps","dispatch","payload","top100Films","label","year"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport { toast } from \"react-toastify\";\nimport Nav from \"../../../../Nav\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Avatar from \"@mui/material/Avatar\";\nimport AddIcon from \"@mui/icons-material/Add\";\n\nconst AddProject = ({ projects, addProject }) => {\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [teamNeeded, setTeamNeeded] = useState(\"\");\n  const [level, setLevel] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [isEmpty, setIsEmpty] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    console.log(isError);\n  }, [isError]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const checkProjectNameExists = projects.filter((project) =>\n      project.name === name ? project : null\n    );\n\n    if (!type || !name || !desc || !teamNeeded || !level || !location) {\n      return toast.warning(\"Please fill in all fields!!\");\n    }\n    if (checkProjectNameExists.length > 0) {\n      return toast.error(\"This project name already exists!!\");\n    }\n\n    const data = {\n      id: projects.length > 0 ? projects[projects.length - 1].id + 1 : 0,\n      desc,\n      name,\n      level,\n      teamNeeded,\n      location,\n      type,\n    };\n\n    addProject(data);\n    toast.success(\"Your Request sent successfully!!\");\n    navigate(\"/myprojects\");\n  };\n\n  return (\n    <>\n      <Nav />\n      <Container\n        component=\"main\"\n        maxWidth=\"xs\"\n        sx={{ paddingTop: \"105px\", paddingBottom: \"100px\" }}\n      >\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          {/* <Avatar sx={{ m: 1, bgcolor: \"#00468B\" }}>\n            <AddIcon />\n          </Avatar> */}\n          <Typography\n            sx={{\n              fontFamily: \"Comfortaa\",\n              color: \"#00468B\",\n              fontWeight: \"800\",\n              fontSize: \"40px\",\n              marginBottom:\"30px\"\n            }}\n            component=\"h1\"\n            variant=\"h5\"\n          >\n            Add Project\n          </Typography>\n          <Box\n            onSubmit={(e) => {\n              if (isEmpty) {\n                e.preventDefault();\n                setIsEmpty(true);\n                setIsError(true);\n              } else {\n                setIsEmpty(false);\n              }\n            }}\n            sx={{\n              width: 500,\n              maxWidth: \"100%\",\n            }}\n          >\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={12}>\n                  <TextField\n                    fullWidth\n                    label=\"Project Name\"\n                    id=\"fullWidth\"\n                    error={isError}\n                    autoComplete=\"given-name\"\n                    name=\"projectName\"\n                    required\n                    autoFocus\n                    onChange={(e) => {\n                      setName(e.target.value);\n                      if (name.length !== 0) {\n                        setIsEmpty(false);\n                      }\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={12}>\n                  <TextField\n                    fullWidth\n                    label=\"Project Type\"\n                    id=\"fullWidth\"\n                    error={isError}\n                    autoComplete=\"given-name\"\n                    name=\"projectDesc\"\n                    required\n                    onChange={(e) => {\n                      setType(e.target.value);\n                      if (type.length !== 0) {\n                        setIsEmpty(false);\n                      }\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={12}>\n                  <TextField\n                    fullWidth\n                    label=\"Project Description\"\n                    id=\"fullWidth\"\n                    error={isError}\n                    autoComplete=\"given-name\"\n                    name=\"projectDesc\"\n                    required\n                    onChange={(e) => {\n                      setDesc(e.target.value);\n                      if (desc.length !== 0) {\n                        setIsEmpty(false);\n                      }\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={12}>\n                  <TextField\n                    fullWidth\n                    label=\"Where are You From\"\n                    id=\"fullWidth\"\n                    error={isError}\n                    autoComplete=\"given-name\"\n                    name=\"projectDesc\"\n                    required\n                    onChange={(e) => {\n                      setLocation(e.target.value);\n                      if (location.length !== 0) {\n                        setIsEmpty(false);\n                      }\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={12}>\n                  <TextField\n                    fullWidth\n                    label=\"Number of Team\"\n                    id=\"fullWidth\"\n                    error={isError}\n                    autoComplete=\"given-name\"\n                    name=\"teamNeeded\"\n                    required\n                    onChange={(e) => {\n                      setTeamNeeded(e.target.value);\n                      if (teamNeeded.length !== 0) {\n                        setIsEmpty(false);\n                      }\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={12}>\n                  <TextField\n                    fullWidth\n                    label=\"Level of Your Project\"\n                    id=\"fullWidth\"\n                    error={isError}\n                    autoComplete=\"given-name\"\n                    name=\"level\"\n                    required\n                    onChange={(e) => {\n                      setLevel(e.target.value);\n                      if (level.length !== 0) {\n                        setIsEmpty(false);\n                      }\n                    }}\n                  />\n                </Grid>\n              </Grid>\n\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{\n                  \":hover\": {\n                    bgcolor: \"#e4a300\",\n                  },\n                  mt: 3,\n                  mb: 2,\n                  backgroundColor: \"#FFB703\",\n                }}\n              >\n                Add Project\n              </Button>\n            </form>\n          </Box>\n        </Box>\n      </Container>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  projects: state,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  addProject: (data) => {\n    dispatch({ type: \"ADD_PROJECT\", payload: data });\n  },\n});\n\nconst top100Films = [\n  { label: 'The Shawshank Redemption', year: 1994 },\n  { label: 'The Godfather', year: 1972 },\n  { label: 'The Godfather: Part II', year: 1974 },\n  { label: 'The Dark Knight', year: 2008 },\n  { label: '12 Angry Men', year: 1957 },\n  { label: \"Schindler's List\", year: 1993 },\n  { label: 'Pulp Fiction', year: 1994 },\n  {\n    label: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { label: 'The Good, the Bad and the Ugly', year: 1966 },\n  { label: 'Fight Club', year: 1999 },\n  {\n    label: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    label: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { label: 'Forrest Gump', year: 1994 },\n  { label: 'Inception', year: 2010 },\n  {\n    label: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { label: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { label: 'Goodfellas', year: 1990 },\n  { label: 'The Matrix', year: 1999 },\n  { label: 'Seven Samurai', year: 1954 },\n  {\n    label: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { label: 'City of God', year: 2002 },\n  { label: 'Se7en', year: 1995 },\n  { label: 'The Silence of the Lambs', year: 1991 },\n  { label: \"It's a Wonderful Life\", year: 1946 },\n  { label: 'Life Is Beautiful', year: 1997 },\n  { label: 'The Usual Suspects', year: 1995 },\n  { label: 'Léon: The Professional', year: 1994 },\n  { label: 'Spirited Away', year: 2001 },\n  { label: 'Saving Private Ryan', year: 1998 },\n  { label: 'Once Upon a Time in the West', year: 1968 },\n  { label: 'American History X', year: 1998 },\n  { label: 'Interstellar', year: 2014 },\n  { label: 'Casablanca', year: 1942 },\n  { label: 'City Lights', year: 1931 },\n  { label: 'Psycho', year: 1960 },\n  { label: 'The Green Mile', year: 1999 },\n  { label: 'The Intouchables', year: 2011 },\n  { label: 'Modern Times', year: 1936 },\n  { label: 'Raiders of the Lost Ark', year: 1981 },\n  { label: 'Rear Window', year: 1954 },\n  { label: 'The Pianist', year: 2002 },\n  { label: 'The Departed', year: 2006 },\n  { label: 'Terminator 2: Judgment Day', year: 1991 },\n  { label: 'Back to the Future', year: 1985 },\n  { label: 'Whiplash', year: 2014 },\n  { label: 'Gladiator', year: 2000 },\n  { label: 'Memento', year: 2000 },\n  { label: 'The Prestige', year: 2006 },\n  { label: 'The Lion King', year: 1994 },\n  { label: 'Apocalypse Now', year: 1979 },\n  { label: 'Alien', year: 1979 },\n  { label: 'Sunset Boulevard', year: 1950 },\n  {\n    label: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { label: 'The Great Dictator', year: 1940 },\n  { label: 'Cinema Paradiso', year: 1988 },\n  { label: 'The Lives of Others', year: 2006 },\n  { label: 'Grave of the Fireflies', year: 1988 },\n  { label: 'Paths of Glory', year: 1957 },\n  { label: 'Django Unchained', year: 2012 },\n\n];\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProject);\n"]},"metadata":{},"sourceType":"module"}