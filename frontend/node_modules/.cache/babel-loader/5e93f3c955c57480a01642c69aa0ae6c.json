{"ast":null,"code":"var _jsxFileName = \"/Users/atheer/Desktop/Devteams/frontend/src/components/Pages/Projects/ProjectCRUD/AddProject/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport { toast } from \"react-toastify\";\nimport Nav from \"../../../../Nav\";\nimport axios from \"axios\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport { Grid } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddProject = _ref => {\n  _s();\n\n  let {\n    projects,\n    addProject\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [teamNeeded, setTeamNeeded] = useState(\"\");\n  const [level, setLevel] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const checkProjectNameExists = projects.filter(project => project.name === name ? project : null);\n\n    if (!type || !name || !desc || !teamNeeded || !level || !location) {\n      return toast.warning(\"Please fill in all fields!!\");\n    }\n\n    if (checkProjectNameExists.length > 0) {\n      return toast.error(\"This project name already exists!!\");\n    }\n\n    const data = {\n      id: projects.length > 0 ? projects[projects.length - 1].id + 1 : 0,\n      desc,\n      name,\n      level,\n      teamNeeded,\n      location,\n      type\n    };\n    addProject(data);\n    toast.success(\"Project added successfully!!\");\n    navigate(\"/myprojects\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(AddProject, \"Q7W/6r7JBlq0jXZSHtNm7r2ChxA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AddProject;\n\nconst mapStateToProps = state => ({\n  projects: state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addProject: data => {\n    dispatch({\n      type: \"ADD_PROJECT\",\n      payload: data\n    });\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProject);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProject\");","map":{"version":3,"sources":["/Users/atheer/Desktop/Devteams/frontend/src/components/Pages/Projects/ProjectCRUD/AddProject/index.js"],"names":["React","useState","connect","useNavigate","toast","Nav","axios","Avatar","Button","CssBaseline","TextField","Box","LockOutlinedIcon","Typography","Container","createTheme","ThemeProvider","Toolbar","Grid","AddProject","projects","addProject","name","setName","type","setType","desc","setDesc","teamNeeded","setTeamNeeded","level","setLevel","location","setLocation","navigate","handleSubmit","e","preventDefault","checkProjectNameExists","filter","project","warning","length","error","data","id","success","mapStateToProps","state","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport { toast } from \"react-toastify\";\nimport Nav from \"../../../../Nav\";\nimport axios from \"axios\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport { Grid } from \"@mui/material\";\nconst AddProject = ({ projects, addProject }) => {\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [teamNeeded, setTeamNeeded] = useState(\"\");\n  const [level, setLevel] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const checkProjectNameExists = projects.filter((project) =>\n      project.name === name ? project : null\n    );\n\n    if (!type || !name || !desc || !teamNeeded || !level || !location) {\n      return toast.warning(\"Please fill in all fields!!\");\n    }\n    if (checkProjectNameExists.length > 0) {\n      return toast.error(\"This project name already exists!!\");\n    }\n\n    const data = {\n      id: projects.length > 0 ? projects[projects.length - 1].id + 1 : 0,\n      desc,\n      name,\n      level,\n      teamNeeded,\n      location,\n      type,\n    };\n\n    addProject(data);\n    toast.success(\"Project added successfully!!\");\n    navigate(\"/myprojects\");\n  };\n\n  return (\n    <>\n      <Nav />\n\n      {/* <ThemeProvider>\n        <Toolbar id=\"back-to-top-anchor\" />\n        <Container\n          component=\"main\"\n          maxWidth=\"xs\"\n          sx={{ paddingTop: \"90px\", paddingBottom: \"170px\" }}\n        >\n          <CssBaseline />\n          <Box\n            sx={{\n              marginTop: 8,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <Typography\n              sx={{\n                fontFamily: \"Comfortaa\",\n                color: \"#00468B\",\n                fontWeight: \"800\",\n                marginTop: \"20px\",\n                fontSize: \"40px\",\n              }}\n              component=\"h1\"\n              variant=\"h5\"\n            >\n              Add Project\n            </Typography>\n            <Box\n              component=\"form\"\n              noValidate\n              onSubmit={handleSubmit}\n              sx={{ mt: 3 }}\n            >\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    autoComplete=\"given-name\"\n                    name=\"projectName\"\n                    required\n                    fullWidth\n                    id=\"projectName\"\n                    label=\"Project Name\"\n                    autoFocus\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                <Grid/>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    required\n                    fullWidth\n                    id=\"desc\"\n                    label=\"Project Description\"\n                    name=\"desc\"\n                    autoComplete=\"family-name\"\n                    onChange={(e) => setDesc(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    id=\"type\"\n                    label=\"Project type\"\n                    name=\"type\"\n                    autoComplete=\"type\"\n                    onChange={(e) => setType(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    name=\"team\"\n                    label=\"Team Needed\"\n                    type=\"text\"\n                    id=\"team\"\n                    autoComplete=\"new-password\"\n                    onChange={(e) => setTeamNeeded(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    name=\"level\"\n                    label=\"Project Level\"\n                    type=\"text\"\n                    id=\"level\"\n                    autoComplete=\"new-password\"\n                    onChange={(e) => setLevel(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    name=\"location\"\n                    label=\"Your Location\"\n                    type=\"text\"\n                    id=\"location\"\n                    autoComplete=\"new-password\"\n                    onChange={(e) => setLocation(e.target.value)}\n                  />\n                </Grid>\n              </Grid>\n              \n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{\n                  \":hover\": {\n                    bgcolor: \"#e4a300\",\n                  },\n                  mt: 3,\n                  mb: 2,\n                  backgroundColor: \"#FFB703\",\n                }}\n                onClick={() => {}}\n              >\n                Add Project\n              </Button>\n          </Box>\n\n          </Box>\n        </Container>\n      </ThemeProvider> */}\n      {/* <div className=\"container-fluid\">\n      <h1 className=\"text-center text-dark py-3 display-2\">Add Project</h1>\n      <div className=\"row\">\n        <div className=\"col-md-6 p-5 mx-auto shadow\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                value={name}\n                placeholder={\"Project Name\"}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                value={desc}\n                placeholder={\"Description\"}\n                onChange={(e) => setDesc(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                value={type}\n                placeholder={\"Project Type\"}\n                onChange={(e) => setType(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                value={teamNeeded}\n                placeholder={\"Teem needed\"}\n                onChange={(e) => setTeamNeeded(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                value={location}\n                placeholder={\"Where are you\"}\n                onChange={(e) => setLocation(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                value={level}\n                placeholder={\"Whats the level of project?\"}\n                onChange={(e) => setLevel(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"btn btn-block btn-dark\"\n                type=\"submit\"\n                value=\"Add Student\"\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div> */}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  projects: state,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  addProject: (data) => {\n    dispatch({ type: \"ADD_PROJECT\", payload: data });\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProject);\n"]},"metadata":{},"sourceType":"module"}