{"ast":null,"code":"var _jsxFileName = \"/Users/atheer/Desktop/Devteams/frontend/src/components/Pages/Projects/ProjectCRUD/AddProject/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport { toast } from \"react-toastify\";\nimport Nav from \"../../../../Nav\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddProject = _ref => {\n  _s();\n\n  let {\n    projects,\n    addProject\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [teamNeeded, setTeamNeeded] = useState(\"\");\n  const [level, setLevel] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [isEmpty, setIsEmpty] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    console.log(isError);\n  }, [isError]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const checkProjectNameExists = projects.filter(project => project.name === name ? project : null);\n\n    if (!type || !name || !desc || !teamNeeded || !level || !location) {\n      return toast.warning(\"Please fill in all fields!!\");\n    }\n\n    if (checkProjectNameExists.length > 0) {\n      return toast.error(\"This project name already exists!!\");\n    }\n\n    const data = {\n      id: projects.length > 0 ? projects[projects.length - 1].id + 1 : 0,\n      desc,\n      name,\n      level,\n      teamNeeded,\n      location,\n      type\n    };\n    addProject(data);\n    toast.success(\"Your Request sent successfully!!\");\n    navigate(\"/myprojects\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      sx: {\n        paddingTop: \"105px\",\n        paddingBottom: \"100px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            fontFamily: \"Comfortaa\",\n            color: \"#00468B\",\n            fontWeight: \"800\",\n            fontSize: \"40px\",\n            marginBottom: \"30px\"\n          },\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Add Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          onSubmit: e => {\n            if (isEmpty) {\n              e.preventDefault();\n              setIsEmpty(true);\n              setIsError(true);\n            } else {\n              setIsEmpty(false);\n            }\n          },\n          sx: {\n            width: 500,\n            maxWidth: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Project name\",\n                  error: isError,\n                  required: true,\n                  autoFocus: true,\n                  onChange: e => {\n                    setName(e.target.value);\n\n                    if (name.length !== 0) {\n                      setIsEmpty(false);\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Project idea\",\n                  error: isError,\n                  required: true,\n                  onChange: e => {\n                    setDesc(e.target.value);\n\n                    if (desc.length !== 0) {\n                      setIsEmpty(false);\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  value: type,\n                  onChange: (event, newValue) => {\n                    setType(newValue);\n                  },\n                  options: projectsType,\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    label: \"Project type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Where are You From\",\n                  id: \"fullWidth\",\n                  error: isError,\n                  name: \"projectDesc\",\n                  required: true,\n                  onChange: e => {\n                    setLocation(e.target.value);\n\n                    if (location.length !== 0) {\n                      setIsEmpty(false);\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  value: teamNeeded,\n                  onChange: (event, newValue) => {\n                    setTeamNeeded(newValue);\n                  },\n                  options: projectsTeam,\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    label: \"Number of teammates\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n                  value: level,\n                  onChange: (event, newValue) => {\n                    setTeamNeeded(newValue);\n                  },\n                  options: projectsTeam,\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    label: \"Number of teammates\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Level of Your Project\",\n                  id: \"fullWidth\",\n                  error: isError,\n                  name: \"level\",\n                  required: true,\n                  onChange: e => {\n                    setLevel(e.target.value);\n\n                    if (level.length !== 0) {\n                      setIsEmpty(false);\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              sx: {\n                \":hover\": {\n                  bgcolor: \"#e4a300\"\n                },\n                mt: 3,\n                mb: 2,\n                backgroundColor: \"#FFB703\"\n              },\n              children: \"Add Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddProject, \"X5V0rM7TYUXOWYoHHIrpzrkWCBA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AddProject;\n\nconst mapStateToProps = state => ({\n  projects: state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addProject: data => {\n    dispatch({\n      type: \"ADD_PROJECT\",\n      payload: data\n    });\n  }\n});\n\nconst projectsType = [\"Web Application\", \"Android Application\", \"IOS Application\", \"Security System\", \"UI\", \"UX\"];\nconst projectsTeam = [1, 2, 3, 4, 5, 6];\nconst projectsLevel = [\"Guru\", \"Advanced\", \"Intermediate\", \"Junior\", \"Newbie\"];\nconst countries = [{\n  code: \"AE\",\n  label: \"United Arab Emirates\"\n}, {\n  code: \"AF\",\n  label: \"Afghanistan\"\n}, {\n  code: \"AL\",\n  label: \"Albania\"\n}, {\n  code: \"AR\",\n  label: \"Argentina\"\n}, {\n  code: \"AT\",\n  label: \"Austria\"\n}, {\n  code: \"AU\",\n  label: \"Australia\",\n  suggested: true\n}, {\n  code: \"BA\",\n  label: \"Bosnia and Herzegovina\"\n}, {\n  code: \"BD\",\n  label: \"Bangladesh\"\n}, {\n  code: \"BG\",\n  label: \"Bulgaria\"\n}, {\n  code: \"BH\",\n  label: \"Bahrain\"\n}, {\n  code: \"BR\",\n  label: \"Brazil\"\n}, {\n  code: \"BS\",\n  label: \"Bahamas\"\n}, {\n  code: \"CA\",\n  label: \"Canada\",\n  suggested: true\n}, {\n  code: \"CH\",\n  label: \"Switzerland\"\n}, {\n  code: \"CL\",\n  label: \"Chile\"\n}, {\n  code: \"CM\",\n  label: \"Cameroon\"\n}, {\n  code: \"CN\",\n  label: \"China\"\n}, {\n  code: \"CO\",\n  label: \"Colombia\"\n}, {\n  code: \"CR\",\n  label: \"Costa Rica\"\n}, {\n  code: \"CU\",\n  label: \"Cuba\"\n}, {\n  code: \"DE\",\n  label: \"Germany\",\n  suggested: true\n}, {\n  code: \"EG\",\n  label: \"Egypt\"\n}, {\n  code: \"ES\",\n  label: \"Spain\"\n}, {\n  code: \"ET\",\n  label: \"Ethiopia\"\n}, {\n  code: \"FR\",\n  label: \"France\",\n  suggested: true\n}, {\n  code: \"GB\",\n  label: \"United Kingdom\"\n}, {\n  code: \"GE\",\n  label: \"Georgia\"\n}, {\n  code: \"GH\",\n  label: \"Ghana\"\n}, {\n  code: \"GL\",\n  label: \"Greenland\"\n}, {\n  code: \"GR\",\n  label: \"Greece\"\n}, {\n  code: \"GT\",\n  label: \"Guatemala\"\n}, {\n  code: \"HK\",\n  label: \"Hong Kong\"\n}, {\n  code: \"ID\",\n  label: \"Indonesia\"\n}, {\n  code: \"IN\",\n  label: \"India\"\n}, {\n  code: \"IQ\",\n  label: \"Iraq\"\n}, {\n  code: \"IT\",\n  label: \"Italy\"\n}, {\n  code: \"JM\",\n  label: \"Jamaica\"\n}, {\n  code: \"JO\",\n  label: \"Jordan\"\n}, {\n  code: \"JP\",\n  label: \"Japan\",\n  suggested: true\n}, {\n  code: \"KH\",\n  label: \"Cambodia\"\n}, {\n  code: \"KR\",\n  label: \"Korea, Republic of\"\n}, {\n  code: \"KW\",\n  label: \"Kuwait\"\n}, {\n  code: \"KZ\",\n  label: \"Kazakhstan\"\n}, {\n  code: \"LB\",\n  label: \"Lebanon\"\n}, {\n  code: \"MA\",\n  label: \"Morocco\"\n}, {\n  code: \"MG\",\n  label: \"Madagascar\"\n}, {\n  code: \"ML\",\n  label: \"Mali\"\n}, {\n  code: \"MV\",\n  label: \"Maldives\"\n}, {\n  code: \"MX\",\n  label: \"Mexico\"\n}, {\n  code: \"MY\",\n  label: \"Malaysia\"\n}, {\n  code: \"MZ\",\n  label: \"Mozambique\"\n}, {\n  code: \"NA\",\n  label: \"Namibia\"\n}, {\n  code: \"NE\",\n  label: \"Niger\"\n}, {\n  code: \"NG\",\n  label: \"Nigeria\"\n}, {\n  code: \"NL\",\n  label: \"Netherlands\"\n}, {\n  code: \"NO\",\n  label: \"Norway\"\n}, {\n  code: \"NP\",\n  label: \"Nepal\"\n}, {\n  code: \"NZ\",\n  label: \"New Zealand\"\n}, {\n  code: \"OM\",\n  label: \"Oman\"\n}, {\n  code: \"PE\",\n  label: \"Peru\"\n}, {\n  code: \"PH\",\n  label: \"Philippines\"\n}, {\n  code: \"PK\",\n  label: \"Pakistan\"\n}, {\n  code: \"PL\",\n  label: \"Poland\"\n}, {\n  code: \"PS\",\n  label: \"Palestine, State of\"\n}, {\n  code: \"PT\",\n  label: \"Portugal\"\n}, {\n  code: \"QA\",\n  label: \"Qatar\"\n}, {\n  code: \"RO\",\n  label: \"Romania\"\n}, {\n  code: \"RS\",\n  label: \"Serbia\"\n}, {\n  code: \"RU\",\n  label: \"Russian Federation\"\n}, {\n  code: \"SA\",\n  label: \"Saudi Arabia\"\n}, {\n  code: \"SD\",\n  label: \"Sudan\"\n}, {\n  code: \"SE\",\n  label: \"Sweden\"\n}, {\n  code: \"SG\",\n  label: \"Singapore\"\n}, {\n  code: \"SK\",\n  label: \"Slovakia\"\n}, {\n  code: \"SY\",\n  label: \"Syrian Arab Republic\"\n}, {\n  code: \"SZ\",\n  label: \"Swaziland\"\n}, {\n  code: \"TD\",\n  label: \"Chad\"\n}, {\n  code: \"TH\",\n  label: \"Thailand\"\n}, {\n  code: \"TN\",\n  label: \"Tunisia\"\n}, {\n  code: \"TR\",\n  label: \"Turkey\"\n}, {\n  code: \"TW\",\n  label: \"Taiwan, Province of China\"\n}, {\n  code: \"UA\",\n  label: \"Ukraine\"\n}, {\n  code: \"UG\",\n  label: \"Uganda\"\n}, {\n  code: \"US\",\n  label: \"United States\",\n  suggested: true\n}, {\n  code: \"UY\",\n  label: \"Uruguay\"\n}, {\n  code: \"UZ\",\n  label: \"Uzbekistan\"\n}, {\n  code: \"VE\",\n  label: \"Venezuela\"\n}, {\n  code: \"VN\",\n  label: \"Vietnam\"\n}, {\n  code: \"YE\",\n  label: \"Yemen\"\n}];\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProject);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProject\");","map":{"version":3,"sources":["/Users/atheer/Desktop/Devteams/frontend/src/components/Pages/Projects/ProjectCRUD/AddProject/index.js"],"names":["React","useState","useEffect","connect","useNavigate","toast","Nav","Button","Box","TextField","Container","Grid","Typography","Autocomplete","AddProject","projects","addProject","name","setName","type","setType","desc","setDesc","teamNeeded","setTeamNeeded","level","setLevel","location","setLocation","isEmpty","setIsEmpty","isError","setIsError","navigate","console","log","handleSubmit","e","preventDefault","checkProjectNameExists","filter","project","warning","length","error","data","id","success","paddingTop","paddingBottom","marginTop","display","flexDirection","alignItems","fontFamily","color","fontWeight","fontSize","marginBottom","width","maxWidth","target","value","event","newValue","projectsType","params","projectsTeam","bgcolor","mt","mb","backgroundColor","mapStateToProps","state","mapDispatchToProps","dispatch","payload","projectsLevel","countries","code","label","suggested"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport { toast } from \"react-toastify\";\nimport Nav from \"../../../../Nav\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\n\nconst AddProject = ({ projects, addProject }) => {\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [teamNeeded, setTeamNeeded] = useState(\"\");\n  const [level, setLevel] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [isEmpty, setIsEmpty] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    console.log(isError);\n  }, [isError]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const checkProjectNameExists = projects.filter((project) =>\n      project.name === name ? project : null\n    );\n\n    if (!type || !name || !desc || !teamNeeded || !level || !location) {\n      return toast.warning(\"Please fill in all fields!!\");\n    }\n    if (checkProjectNameExists.length > 0) {\n      return toast.error(\"This project name already exists!!\");\n    }\n\n    const data = {\n      id: projects.length > 0 ? projects[projects.length - 1].id + 1 : 0,\n      desc,\n      name,\n      level,\n      teamNeeded,\n      location,\n      type,\n    };\n\n    addProject(data);\n    toast.success(\"Your Request sent successfully!!\");\n    navigate(\"/myprojects\");\n  };\n\n  return (\n    <>\n      <Nav />\n      <Container\n        component=\"main\"\n        maxWidth=\"xs\"\n        sx={{ paddingTop: \"105px\", paddingBottom: \"100px\" }}\n      >\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          {/* <Avatar sx={{ m: 1, bgcolor: \"#00468B\" }}>\n            <AddIcon />\n          </Avatar> */}\n          <Typography\n            sx={{\n              fontFamily: \"Comfortaa\",\n              color: \"#00468B\",\n              fontWeight: \"800\",\n              fontSize: \"40px\",\n              marginBottom: \"30px\",\n            }}\n            component=\"h1\"\n            variant=\"h5\"\n          >\n            Add Project\n          </Typography>\n          <Box\n            onSubmit={(e) => {\n              if (isEmpty) {\n                e.preventDefault();\n                setIsEmpty(true);\n                setIsError(true);\n              } else {\n                setIsEmpty(false);\n              }\n            }}\n            sx={{\n              width: 500,\n              maxWidth: \"100%\",\n            }}\n          >\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={12}>\n                  <TextField\n                    fullWidth\n                    label=\"Project name\"\n                    error={isError}\n                    required\n                    autoFocus\n                    onChange={(e) => {\n                      setName(e.target.value);\n                      if (name.length !== 0) {\n                        setIsEmpty(false);\n                      }\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={12}>\n                  <TextField\n                    fullWidth\n                    label=\"Project idea\"\n                    error={isError}\n                    required\n                    onChange={(e) => {\n                      setDesc(e.target.value);\n                      if (desc.length !== 0) {\n                        setIsEmpty(false);\n                      }\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={12}>\n                  <Autocomplete\n                    value={type}\n                    onChange={(event, newValue) => {\n                      setType(newValue);\n                    }}\n                    options={projectsType}\n                    renderInput={(params) => (\n                      <TextField {...params} label=\"Project type\" />\n                    )}\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={12}>\n                  <TextField\n                    fullWidth\n                    label=\"Where are You From\"\n                    id=\"fullWidth\"\n                    error={isError}\n                    name=\"projectDesc\"\n                    required\n                    onChange={(e) => {\n                      setLocation(e.target.value);\n                      if (location.length !== 0) {\n                        setIsEmpty(false);\n                      }\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={12}>\n                  <Autocomplete\n                    value={teamNeeded}\n                    onChange={(event, newValue) => {\n                      setTeamNeeded(newValue);\n                    }}\n                    options={projectsTeam}\n                    renderInput={(params) => (\n                      <TextField {...params} label=\"Number of teammates\" />\n                    )}\n                  />\n                </Grid>\n\n                \n                <Grid item xs={12} sm={12}>\n                <Autocomplete\n                    value={level}\n                    onChange={(event, newValue) => {\n                      setTeamNeeded(newValue);\n                    }}\n                    options={projectsTeam}\n                    renderInput={(params) => (\n                      <TextField {...params} label=\"Number of teammates\" />\n                    )}\n                  />\n\n                  <TextField\n                    fullWidth\n                    label=\"Level of Your Project\"\n                    id=\"fullWidth\"\n                    error={isError}\n                    name=\"level\"\n                    required\n                    onChange={(e) => {\n                      setLevel(e.target.value);\n                      if (level.length !== 0) {\n                        setIsEmpty(false);\n                      }\n                    }}\n                  />\n                </Grid>\n              </Grid>\n\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{\n                  \":hover\": {\n                    bgcolor: \"#e4a300\",\n                  },\n                  mt: 3,\n                  mb: 2,\n                  backgroundColor: \"#FFB703\",\n                }}\n              >\n                Add Project\n              </Button>\n            </form>\n          </Box>\n        </Box>\n      </Container>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  projects: state,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  addProject: (data) => {\n    dispatch({ type: \"ADD_PROJECT\", payload: data });\n  },\n});\n\nconst projectsType = [\n  \"Web Application\",\n  \"Android Application\",\n  \"IOS Application\",\n  \"Security System\",\n  \"UI\",\n  \"UX\",\n];\n\nconst projectsTeam = [1, 2, 3, 4, 5, 6];\n\nconst projectsLevel = [\"Guru\", \"Advanced\", \"Intermediate\", \"Junior\", \"Newbie\"];\n\nconst countries = [\n  {\n    code: \"AE\",\n    label: \"United Arab Emirates\",\n  },\n  { code: \"AF\", label: \"Afghanistan\" },\n  { code: \"AL\", label: \"Albania\" },\n  { code: \"AR\", label: \"Argentina\" },\n  { code: \"AT\", label: \"Austria\" },\n  {\n    code: \"AU\",\n    label: \"Australia\",\n    suggested: true,\n  },\n  {\n    code: \"BA\",\n    label: \"Bosnia and Herzegovina\",\n  },\n  { code: \"BD\", label: \"Bangladesh\" },\n  { code: \"BG\", label: \"Bulgaria\" },\n  { code: \"BH\", label: \"Bahrain\" },\n  { code: \"BR\", label: \"Brazil\" },\n  { code: \"BS\", label: \"Bahamas\" },\n  {\n    code: \"CA\",\n    label: \"Canada\",\n    suggested: true,\n  },\n  { code: \"CH\", label: \"Switzerland\" },\n  { code: \"CL\", label: \"Chile\" },\n  { code: \"CM\", label: \"Cameroon\" },\n  { code: \"CN\", label: \"China\" },\n  { code: \"CO\", label: \"Colombia\" },\n  { code: \"CR\", label: \"Costa Rica\" },\n  { code: \"CU\", label: \"Cuba\" },\n  {\n    code: \"DE\",\n    label: \"Germany\",\n    suggested: true,\n  },\n  { code: \"EG\", label: \"Egypt\" },\n  { code: \"ES\", label: \"Spain\" },\n  { code: \"ET\", label: \"Ethiopia\" },\n  {\n    code: \"FR\",\n    label: \"France\",\n    suggested: true,\n  },\n  { code: \"GB\", label: \"United Kingdom\" },\n  { code: \"GE\", label: \"Georgia\" },\n  { code: \"GH\", label: \"Ghana\" },\n  { code: \"GL\", label: \"Greenland\" },\n  { code: \"GR\", label: \"Greece\" },\n  { code: \"GT\", label: \"Guatemala\" },\n  { code: \"HK\", label: \"Hong Kong\" },\n  { code: \"ID\", label: \"Indonesia\" },\n  { code: \"IN\", label: \"India\" },\n  { code: \"IQ\", label: \"Iraq\" },\n  { code: \"IT\", label: \"Italy\" },\n  { code: \"JM\", label: \"Jamaica\" },\n  { code: \"JO\", label: \"Jordan\" },\n  {\n    code: \"JP\",\n    label: \"Japan\",\n    suggested: true,\n  },\n  { code: \"KH\", label: \"Cambodia\" },\n  { code: \"KR\", label: \"Korea, Republic of\" },\n  { code: \"KW\", label: \"Kuwait\" },\n  { code: \"KZ\", label: \"Kazakhstan\" },\n  { code: \"LB\", label: \"Lebanon\" },\n  { code: \"MA\", label: \"Morocco\" },\n  { code: \"MG\", label: \"Madagascar\" },\n  { code: \"ML\", label: \"Mali\" },\n  { code: \"MV\", label: \"Maldives\" },\n  { code: \"MX\", label: \"Mexico\" },\n  { code: \"MY\", label: \"Malaysia\" },\n  { code: \"MZ\", label: \"Mozambique\" },\n  { code: \"NA\", label: \"Namibia\" },\n  { code: \"NE\", label: \"Niger\" },\n  { code: \"NG\", label: \"Nigeria\" },\n  { code: \"NL\", label: \"Netherlands\" },\n  { code: \"NO\", label: \"Norway\" },\n  { code: \"NP\", label: \"Nepal\" },\n  { code: \"NZ\", label: \"New Zealand\" },\n  { code: \"OM\", label: \"Oman\" },\n  { code: \"PE\", label: \"Peru\" },\n  { code: \"PH\", label: \"Philippines\" },\n  { code: \"PK\", label: \"Pakistan\" },\n  { code: \"PL\", label: \"Poland\" },\n  {\n    code: \"PS\",\n    label: \"Palestine, State of\",\n  },\n  { code: \"PT\", label: \"Portugal\" },\n  { code: \"QA\", label: \"Qatar\" },\n  { code: \"RO\", label: \"Romania\" },\n  { code: \"RS\", label: \"Serbia\" },\n  { code: \"RU\", label: \"Russian Federation\" },\n  { code: \"SA\", label: \"Saudi Arabia\" },\n  { code: \"SD\", label: \"Sudan\" },\n  { code: \"SE\", label: \"Sweden\" },\n  { code: \"SG\", label: \"Singapore\" },\n  { code: \"SK\", label: \"Slovakia\" },\n  {\n    code: \"SY\",\n    label: \"Syrian Arab Republic\",\n  },\n  { code: \"SZ\", label: \"Swaziland\" },\n  { code: \"TD\", label: \"Chad\" },\n  { code: \"TH\", label: \"Thailand\" },\n  { code: \"TN\", label: \"Tunisia\" },\n  { code: \"TR\", label: \"Turkey\" },\n  {\n    code: \"TW\",\n    label: \"Taiwan, Province of China\",\n  },\n  { code: \"UA\", label: \"Ukraine\" },\n  { code: \"UG\", label: \"Uganda\" },\n  {\n    code: \"US\",\n    label: \"United States\",\n    suggested: true,\n  },\n  { code: \"UY\", label: \"Uruguay\" },\n  { code: \"UZ\", label: \"Uzbekistan\" },\n  { code: \"VE\", label: \"Venezuela\" },\n  { code: \"VN\", label: \"Vietnam\" },\n  { code: \"YE\", label: \"Yemen\" },\n];\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProject);\n"]},"metadata":{},"sourceType":"module"}