{"ast":null,"code":"var _jsxFileName = \"/Users/atheer/Desktop/Devteams/frontend/src/Components/Signup/index.js\",\n    _s = $RefreshSig$();\n\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport Container from \"@mui/material/Container\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\nexport default function Signup(props) {\n  _s();\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isEmpty, setIsEmpty] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post(\"/user/signup\", {\n      firstName,\n      lastName,\n      email,\n      password\n    }).then(res => {\n      navigate(\"/signin\");\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        id: \"back-to-top-anchor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        sx: {\n          paddingTop: \"20px\",\n          marginBottom: \"180px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              m: 1,\n              bgcolor: \"#00468B\"\n            },\n            children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            sx: {\n              fontFamily: \"Comfortaa\",\n              color: props.dark ? \"#00468B\" : \"white\",\n              fontWeight: \"800\",\n              marginTop: \"20px\",\n              fontSize: \"40px\"\n            },\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            noValidate: true,\n            sx: {\n              mt: 3\n            },\n            onSubmit: e => {\n              if (isEmpty) {\n                e.preventDefault();\n                setIsEmpty(true);\n                setIsError(true);\n              } else {\n                setIsEmpty(false);\n                handleSubmit(e);\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: isError,\n                  autoComplete: \"given-name\",\n                  name: \"firstName\",\n                  required: true,\n                  fullWidth: true,\n                  id: \"firstName\",\n                  label: \"First Name\",\n                  autoFocus: true,\n                  variant: \"filled\",\n                  onChange: e => {\n                    setFirstName(e.target.value);\n\n                    if (firstName.length !== 0) {\n                      setIsEmpty(false);\n                    }\n                  },\n                  sx: {\n                    bgcolor: props.dark ? \"transparent\" : \"white\",\n                    borderRadius: 1,\n                    borderColor: \"red\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: isError,\n                  variant: \"filled\",\n                  required: true,\n                  fullWidth: true,\n                  id: \"lastName\",\n                  label: \"Last Name\",\n                  name: \"lastName\",\n                  autoComplete: \"family-name\",\n                  onChange: e => {\n                    setLastName(e.target.value);\n\n                    if (lastName.length !== 0) {\n                      setIsEmpty(false);\n                    }\n                  },\n                  sx: {\n                    bgcolor: props.dark ? \"transparent\" : \"white\",\n                    borderRadius: 1,\n                    borderColor: \"red\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: isError,\n                  variant: \"filled\",\n                  required: true,\n                  fullWidth: true,\n                  id: \"email\",\n                  label: \"Email Address\",\n                  name: \"email\",\n                  autoComplete: \"email\",\n                  onChange: e => {\n                    setEmail(e.target.value);\n\n                    if (email.length !== 0) {\n                      setIsEmpty(false);\n                    }\n                  },\n                  sx: {\n                    bgcolor: props.dark ? \"transparent\" : \"white\",\n                    borderRadius: 1,\n                    borderColor: \"red\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: isError,\n                  variant: \"filled\",\n                  required: true,\n                  fullWidth: true,\n                  name: \"password\",\n                  label: \"Password\",\n                  type: \"password\",\n                  id: \"password\",\n                  autoComplete: \"new-password\",\n                  onChange: e => {\n                    setPassword(e.target.value);\n\n                    if (password.length !== 0) {\n                      setIsEmpty(false);\n                    }\n                  },\n                  sx: {\n                    bgcolor: props.dark ? \"transparent\" : \"white\",\n                    borderRadius: 1,\n                    borderColor: \"red\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              sx: {\n                \":hover\": {\n                  bgcolor: \"#e4a300\"\n                },\n                mt: 3,\n                mb: 2,\n                backgroundColor: \"#FFB703\"\n              },\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              justifyContent: \"flex-start\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  href: \"/signin\",\n                  variant: \"body2\",\n                  underline: \"none\",\n                  sx: {\n                    color: props.dark ? \"#00468B\" : \"white\",\n                    \":hover\": {\n                      color: props.dark ? \"primary\" : \"#CDCDCC\"\n                    }\n                  },\n                  children: \"Already have an account? Sign in\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Signup, \"0+nQ6RDRLfeH9fHaCZBlT+Tn1d8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/atheer/Desktop/Devteams/frontend/src/Components/Signup/index.js"],"names":["useNavigate","useState","axios","createTheme","ThemeProvider","LockOutlinedIcon","CssBaseline","Typography","TextField","Container","Toolbar","Avatar","Button","Link","Grid","Box","theme","Signup","props","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","isEmpty","setIsEmpty","isError","setIsError","navigate","handleSubmit","e","preventDefault","post","then","res","catch","err","console","log","paddingTop","marginBottom","marginTop","display","flexDirection","alignItems","m","bgcolor","fontFamily","color","dark","fontWeight","fontSize","mt","target","value","length","borderRadius","borderColor","mb","backgroundColor"],"mappings":"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","sourcesContent":["import { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nimport axios from \"axios\";\n\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport Container from \"@mui/material/Container\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\n\nconst theme = createTheme();\n\nexport default function Signup(props) {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isEmpty, setIsEmpty] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  const navigate = useNavigate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    axios\n      .post(\"/user/signup\", {\n        firstName,\n        lastName,\n        email,\n        password,\n      })\n      .then((res) => {\n        navigate(\"/signin\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <Toolbar id=\"back-to-top-anchor\" />\n        <Container\n          component=\"main\"\n          maxWidth=\"xs\"\n          sx={{ paddingTop: \"20px\", marginBottom: \"180px\" }}\n        >\n          <CssBaseline />\n          <Box\n            sx={{\n              marginTop: 8,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: \"#00468B\" }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography\n              component=\"h1\"\n              variant=\"h5\"\n              sx={{\n                fontFamily: \"Comfortaa\",\n                color: props.dark ? \"#00468B\" : \"white\",\n                fontWeight: \"800\",\n                marginTop: \"20px\",\n                fontSize: \"40px\",\n              }}\n            >\n              Sign up\n            </Typography>\n            <Box\n              component=\"form\"\n              noValidate\n              sx={{ mt: 3 }}\n              onSubmit={(e) => {\n                if (isEmpty) {\n                  e.preventDefault();\n                  setIsEmpty(true);\n                  setIsError(true);\n                } else {\n                  setIsEmpty(false);\n                  handleSubmit(e);\n                }\n              }}\n            >\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    error={isError}\n                    autoComplete=\"given-name\"\n                    name=\"firstName\"\n                    required\n                    fullWidth\n                    id=\"firstName\"\n                    label=\"First Name\"\n                    autoFocus\n                    variant=\"filled\"\n                    onChange={(e) => {\n                      setFirstName(e.target.value);\n                      if (firstName.length !== 0) {\n                        setIsEmpty(false);\n                      }\n                    }}\n                    sx={{\n                      bgcolor: props.dark ? \"transparent\" : \"white\",\n                      borderRadius: 1,\n                      borderColor: \"red\",\n                    }}\n                  ></TextField>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    error={isError}\n                    variant=\"filled\"\n                    required\n                    fullWidth\n                    id=\"lastName\"\n                    label=\"Last Name\"\n                    name=\"lastName\"\n                    autoComplete=\"family-name\"\n                    onChange={(e) => {\n                      setLastName(e.target.value);\n                      if (lastName.length !== 0) {\n                        setIsEmpty(false);\n                      }\n                    }}\n                    sx={{\n                      bgcolor: props.dark ? \"transparent\" : \"white\",\n                      borderRadius: 1,\n                      borderColor: \"red\",\n                    }}\n                  ></TextField>\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    error={isError}\n                    variant=\"filled\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    onChange={(e) => {\n                      setEmail(e.target.value);\n                      if (email.length !== 0) {\n                        setIsEmpty(false);\n                      }\n                    }}\n                    sx={{\n                      bgcolor: props.dark ? \"transparent\" : \"white\",\n                      borderRadius: 1,\n                      borderColor: \"red\",\n                    }}\n                  ></TextField>\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    error={isError}\n                    variant=\"filled\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"new-password\"\n                    onChange={(e) => {\n                      setPassword(e.target.value);\n                      if (password.length !== 0) {\n                        setIsEmpty(false);\n                      }\n                    }}\n                    sx={{\n                      bgcolor: props.dark ? \"transparent\" : \"white\",\n                      borderRadius: 1,\n                      borderColor: \"red\",\n                    }}\n                  ></TextField>\n                </Grid>\n              </Grid>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{\n                  \":hover\": { bgcolor: \"#e4a300\" },\n                  mt: 3,\n                  mb: 2,\n                  backgroundColor: \"#FFB703\",\n                }}\n              >\n                Sign Up\n              </Button>\n              <Grid container justifyContent=\"flex-start\">\n                <Grid item>\n                  <Link\n                    href=\"/signin\"\n                    variant=\"body2\"\n                    underline=\"none\"\n                    sx={{\n                      color: props.dark ? \"#00468B\" : \"white\",\n                      \":hover\": { color: props.dark ? \"primary\" : \"#CDCDCC\" },\n                    }}\n                  >\n                    Already have an account? Sign in\n                  </Link>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </Container>\n      </ThemeProvider>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}