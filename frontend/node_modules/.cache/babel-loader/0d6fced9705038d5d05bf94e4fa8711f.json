{"ast":null,"code":"var _jsxFileName = \"/Users/atheer/Desktop/Devteams/frontend/src/components/Projects/ProjectCRUD/AddProject/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport { toast } from \"react-toastify\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport Container from \"@mui/material/Container\";\nimport Button from \"@mui/material/Button\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddProject = (_ref, props) => {\n  _s();\n\n  let {\n    projects,\n    addProject\n  } = _ref;\n  const [teamNeeded, setTeamNeeded] = useState(\"\");\n  const [isError, setIsError] = useState(false);\n  const [location, setLocation] = useState(\"\");\n  const [isEmpty, setIsEmpty] = useState(true);\n  const [level, setLevel] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const navigate = useNavigate();\n  use;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const checkProjectNameExists = projects.filter(project => project.name === name ? project : null);\n\n    if (!type || !name || !desc || !teamNeeded || !level || !location) {\n      return toast.warning(\"Please fill in all fields!!\");\n    }\n\n    if (checkProjectNameExists.length > 0) {\n      return toast.error(\"This project name already exists!!\");\n    }\n\n    const data = {\n      id: projects.length > 0 ? projects[projects.length - 1].id + 1 : 0,\n      desc,\n      name,\n      level,\n      teamNeeded,\n      location,\n      type\n    };\n    addProject(data);\n    toast.success(\"Your Request sent successfully!!\");\n    navigate(\"/myprojects\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      sx: {\n        paddingTop: \"40px\",\n        paddingBottom: \"100px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            color: props.dark ? \"white\" : \"black\",\n            fontFamily: \"Comfortaa\",\n            fontWeight: \"800\",\n            fontSize: \"40px\",\n            marginBottom: \"30px\"\n          },\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Add Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: 500,\n            maxWidth: \"100%\"\n          },\n          onSubmit: e => {\n            if (isEmpty) {\n              e.preventDefault();\n              setIsEmpty(true);\n              setIsError(true);\n            } else {\n              setIsEmpty(false);\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"filled\",\n                  fullWidth: true,\n                  label: \"Project name\",\n                  error: isError,\n                  required: true,\n                  autoFocus: true,\n                  onChange: e => {\n                    setName(e.target.value);\n\n                    if (name.length !== 0) {\n                      setIsEmpty(false);\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"filled\",\n                  fullWidth: true,\n                  label: \"Project idea\",\n                  error: isError,\n                  required: true,\n                  onChange: e => {\n                    setDesc(e.target.value);\n\n                    if (desc.length !== 0) {\n                      setIsEmpty(false);\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  options: projectsType,\n                  value: type,\n                  onChange: (event, newValue) => {\n                    setType(newValue);\n                  },\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    label: \"Project type\",\n                    variant: \"filled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  value: location,\n                  options: cities,\n                  onChange: (event, newValue) => {\n                    setLocation(newValue);\n                  },\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    label: \"Where are from\",\n                    variant: \"filled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  disablePortal: true,\n                  value: teamNeeded,\n                  options: projectsTeam,\n                  onChange: (event, newValue) => {\n                    setTeamNeeded(newValue);\n                  },\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    label: \"Number of teammates\",\n                    variant: \"filled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  options: projectsLevel,\n                  value: level,\n                  onChange: (event, newValue) => {\n                    setLevel(newValue);\n                  },\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    label: \"Level of your project\",\n                    variant: \"filled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group d-flex align-items-center justify-content-between my-2\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                sx: {\n                  \":hover\": {\n                    bgcolor: \"#e4a300\"\n                  },\n                  maxWidth: \"180px\",\n                  maxHeight: \"30px\",\n                  minWidth: \"180px\",\n                  minHeight: \"30px\",\n                  mt: 3,\n                  mb: 2,\n                  backgroundColor: \"#FFB703\"\n                },\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                sx: {\n                  \":hover\": {\n                    bgcolor: \"#e4a300\"\n                  },\n                  maxWidth: \"180px\",\n                  maxHeight: \"30px\",\n                  minWidth: \"180px\",\n                  minHeight: \"30px\",\n                  mt: 3,\n                  mb: 2,\n                  backgroundColor: \"#FFB703\"\n                },\n                onClick: () => navigate(\"/myprojects\"),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(AddProject, \"vH7Nrf+TrKPG5b/QYxE48TFX/7U=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AddProject;\n\nconst mapStateToProps = state => ({\n  projects: state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addProject: data => {\n    dispatch({\n      type: \"ADD_PROJECT\",\n      payload: data\n    });\n  }\n});\n\nconst cities = [\"Riyadh\", \"Jeddah\", \"Mecca\", \"Medina\", \"Ad Dammam\", \"Al Hufuf\", \"Buraydah\", \"Al Hillah\", \"At Taif\", \"Tabuk\", \"Khamis Mushayt\", \"Hail\", \"Al Qatif\", \"Al Mubarraz\", \"Al Kharj\", \"Najran\", \"Yanbu‘\", \"Abha\", \"Arar\", \"Jazan\", \"Sakaka\", \"Al Bahah\"];\nconst projectsType = [\"Web Application\", \"Android Application\", \"IOS Application\", \"Security System\", \"UI\", \"UX\"];\nconst projectsLevel = [\"Guru\", \"Advanced\", \"Intermediate\", \"Junior\", \"Newbie\"];\nconst projectsTeam = [1, 2, 3, 4, 5, 6];\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProject);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProject\");","map":{"version":3,"sources":["/Users/atheer/Desktop/Devteams/frontend/src/components/Projects/ProjectCRUD/AddProject/index.js"],"names":["React","useState","connect","useNavigate","toast","Autocomplete","Typography","TextField","Container","Button","Grid","Box","AddProject","props","projects","addProject","teamNeeded","setTeamNeeded","isError","setIsError","location","setLocation","isEmpty","setIsEmpty","level","setLevel","name","setName","type","setType","desc","setDesc","navigate","use","handleSubmit","e","preventDefault","checkProjectNameExists","filter","project","warning","length","error","data","id","success","paddingTop","paddingBottom","marginTop","display","flexDirection","alignItems","color","dark","fontFamily","fontWeight","fontSize","marginBottom","width","maxWidth","target","value","projectsType","event","newValue","params","cities","projectsTeam","projectsLevel","bgcolor","maxHeight","minWidth","minHeight","mt","mb","backgroundColor","mapStateToProps","state","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport { toast } from \"react-toastify\";\n\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport Container from \"@mui/material/Container\";\nimport Button from \"@mui/material/Button\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\n\nconst AddProject = ({ projects, addProject }, props) => {\n\n  const [teamNeeded, setTeamNeeded] = useState(\"\");\n  const [isError, setIsError] = useState(false);\n  const [location, setLocation] = useState(\"\");\n  const [isEmpty, setIsEmpty] = useState(true);\n  const [level, setLevel] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  use\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const checkProjectNameExists = projects.filter((project) =>\n      project.name === name ? project : null\n    );\n    if (!type || !name || !desc || !teamNeeded || !level || !location) {\n      return toast.warning(\"Please fill in all fields!!\");\n    }\n    if (checkProjectNameExists.length > 0) {\n      return toast.error(\"This project name already exists!!\");\n    }\n    const data = {\n      id: projects.length > 0 ? projects[projects.length - 1].id + 1 : 0,\n      desc,\n      name,\n      level,\n      teamNeeded,\n      location,\n      type,\n    };\n    addProject(data);\n    toast.success(\"Your Request sent successfully!!\");\n    navigate(\"/myprojects\");\n  };\n\n  return (\n    <>\n      <Container component=\"main\" maxWidth=\"xs\" sx={{paddingTop: \"40px\", paddingBottom: \"100px\"}}>\n        <Box sx={{marginTop: 8, display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\n          <Typography sx={{color: props.dark? \"white\": \"black\",fontFamily: \"Comfortaa\", fontWeight: \"800\", fontSize: \"40px\", marginBottom: \"30px\"}} component=\"h1\" variant=\"h5\">\n            Add Project\n          </Typography>\n          <Box sx={{width: 500, maxWidth: \"100%\"}}\n            onSubmit={(e) => {\n              if (isEmpty) {\n                e.preventDefault();\n                setIsEmpty(true);\n                setIsError(true);\n              } else {\n                setIsEmpty(false);\n              }\n            }}>\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={12}>\n                  <TextField\n                    variant=\"filled\" fullWidth label=\"Project name\" error={isError} required autoFocus\n                    onChange={(e) => {\n                      setName(e.target.value);\n                      if (name.length !== 0) {\n                        setIsEmpty(false);\n                      }\n                    }}>\n                  </TextField>\n                </Grid>\n                <Grid item xs={12} sm={12}>\n                  <TextField\n                    variant=\"filled\" fullWidth label=\"Project idea\" error={isError} required\n                    onChange={(e) => {\n                      setDesc(e.target.value);\n                      if (desc.length !== 0) {\n                        setIsEmpty(false);\n                      }\n                    }}>\n                  </TextField>\n                </Grid>\n                <Grid item xs={12} sm={12}>\n                  <Autocomplete\n                    options={projectsType} value={type} \n                    onChange={(event, newValue) => {\n                      setType(newValue);\n                    }}\n                    renderInput={(params) => (\n                      <TextField {...params} label=\"Project type\" variant=\"filled\"/>\n                    )}>\n                  </Autocomplete>\n                </Grid>\n                <Grid item xs={12} sm={12}>\n                  <Autocomplete\n                    value={location} options={cities}\n                    onChange={(event, newValue) => {\n                      setLocation(newValue);\n                    }}\n                    renderInput={(params) => (\n                      <TextField {...params} label=\"Where are from\" variant=\"filled\"/>\n                    )}> \n                  </Autocomplete>\n                </Grid>\n                <Grid item xs={12} sm={12}>\n                  <Autocomplete\n                    disablePortal value={teamNeeded} options={projectsTeam}\n                    onChange={(event, newValue) => {\n                      setTeamNeeded(newValue);\n                    }}\n                    renderInput={(params) => (\n                      <TextField {...params} label=\"Number of teammates\" variant=\"filled\"/>\n                    )}>\n                  </Autocomplete>\n                </Grid>\n                <Grid item xs={12} sm={12}>\n                  <Autocomplete\n                    options={projectsLevel} value={level} \n                    onChange={(event, newValue) => {\n                      setLevel(newValue);\n                    }}\n                    renderInput={(params) => (\n                      <TextField {...params} label=\"Level of your project\" variant=\"filled\" /> \n                    )}> \n                  </Autocomplete>\n                </Grid>\n              </Grid>\n              <div className=\"form-group d-flex align-items-center justify-content-between my-2\">\n                <Button type=\"submit\" variant=\"contained\" sx={{\":hover\": {bgcolor: \"#e4a300\"}, maxWidth: \"180px\", maxHeight: \"30px\", minWidth: \"180px\", minHeight: \"30px\", mt: 3, mb: 2, backgroundColor: \"#FFB703\"}}>\n                  Add\n                </Button>\n                <Button type=\"submit\" variant=\"contained\" sx={{\":hover\": {bgcolor: \"#e4a300\"}, maxWidth: \"180px\", maxHeight: \"30px\", minWidth: \"180px\", minHeight: \"30px\", mt: 3, mb: 2, backgroundColor: \"#FFB703\" }} onClick={() => navigate(\"/myprojects\")}>\n                  Cancel\n                </Button>\n              </div>\n            </form>\n          </Box>\n        </Box>\n      </Container>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  projects: state,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addProject: (data) => {\n    dispatch({ type: \"ADD_PROJECT\", payload: data });\n  },\n});\n\nconst cities = [\"Riyadh\", \"Jeddah\", \"Mecca\", \"Medina\", \"Ad Dammam\", \"Al Hufuf\", \"Buraydah\", \"Al Hillah\", \"At Taif\", \"Tabuk\", \"Khamis Mushayt\", \"Hail\", \"Al Qatif\", \"Al Mubarraz\", \"Al Kharj\", \"Najran\", \"Yanbu‘\", \"Abha\", \"Arar\", \"Jazan\", \"Sakaka\", \"Al Bahah\"];\nconst projectsType = [\"Web Application\", \"Android Application\", \"IOS Application\", \"Security System\", \"UI\", \"UX\"];\nconst projectsLevel = [\"Guru\", \"Advanced\", \"Intermediate\", \"Junior\", \"Newbie\"];\nconst projectsTeam = [1, 2, 3, 4, 5, 6];\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProject);\n"]},"metadata":{},"sourceType":"module"}