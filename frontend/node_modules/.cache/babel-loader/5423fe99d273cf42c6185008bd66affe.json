{"ast":null,"code":"var _jsxFileName = \"/Users/atheer/Desktop/Devteams/frontend/src/components/Darkmode/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport Box from '@mui/material/Box';\nimport { useTheme, ThemeProvider, createTheme } from '@mui/material/styles';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColorModeContext = /*#__PURE__*/React.createContext({\n  toggleColorMode: () => {}\n});\n\nfunction MyApp() {\n  _s();\n\n  const theme = useTheme();\n  const colorMode = React.useContext(ColorModeContext);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center',\n      bgcolor: 'background.default',\n      color: 'text.primary',\n      borderRadius: 1,\n      p: 3\n    },\n    children: [theme.palette.mode, \" mode\", /*#__PURE__*/_jsxDEV(IconButton, {\n      sx: {\n        ml: 1\n      },\n      onClick: colorMode.toggleColorMode,\n      color: \"inherit\",\n      children: theme.palette.mode === 'dark' ? /*#__PURE__*/_jsxDEV(Brightness7Icon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 42\n      }, this) : /*#__PURE__*/_jsxDEV(Brightness4Icon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 64\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyApp, \"80lvBfk7TN8cUIlLm9bQxIykp7M=\", false, function () {\n  return [useTheme];\n});\n\n_c = MyApp;\nexport default function Darkmode() {\n  _s2();\n\n  const [mode, setMode] = React.useState('light');\n  const colorMode = React.useMemo(() => ({\n    toggleColorMode: () => {\n      setMode(prevMode => prevMode === 'light' ? 'dark' : 'light');\n    }\n  }), []);\n  const theme = React.useMemo(() => createTheme({\n    palette: {\n      mode\n    }\n  }), [mode]);\n  return /*#__PURE__*/_jsxDEV(ColorModeContext.Provider, {\n    value: colorMode,\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(MyApp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Darkmode, \"d4Wg7a/ehJsJwQbDoYd9huIJFWY=\");\n\n_c2 = Darkmode;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyApp\");\n$RefreshReg$(_c2, \"Darkmode\");","map":{"version":3,"sources":["/Users/atheer/Desktop/Devteams/frontend/src/components/Darkmode/index.js"],"names":["React","IconButton","Box","useTheme","ThemeProvider","createTheme","Brightness4Icon","Brightness7Icon","ColorModeContext","createContext","toggleColorMode","MyApp","theme","colorMode","useContext","display","width","alignItems","justifyContent","bgcolor","color","borderRadius","p","palette","mode","ml","Darkmode","setMode","useState","useMemo","prevMode"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,SAASC,QAAT,EAAmBC,aAAnB,EAAkCC,WAAlC,QAAqD,sBAArD;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAOC,eAAP,MAA4B,iCAA5B;;AAEA,MAAMC,gBAAgB,gBAAGR,KAAK,CAACS,aAAN,CAAoB;AAAEC,EAAAA,eAAe,EAAE,MAAM,CAAE;AAA3B,CAApB,CAAzB;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAMC,KAAK,GAAGT,QAAQ,EAAtB;AACA,QAAMU,SAAS,GAAGb,KAAK,CAACc,UAAN,CAAiBN,gBAAjB,CAAlB;AACA,sBACE,QAAC,GAAD;AACE,IAAA,EAAE,EAAE;AACFO,MAAAA,OAAO,EAAE,MADP;AAEFC,MAAAA,KAAK,EAAE,MAFL;AAGFC,MAAAA,UAAU,EAAE,QAHV;AAIFC,MAAAA,cAAc,EAAE,QAJd;AAKFC,MAAAA,OAAO,EAAE,oBALP;AAMFC,MAAAA,KAAK,EAAE,cANL;AAOFC,MAAAA,YAAY,EAAE,CAPZ;AAQFC,MAAAA,CAAC,EAAE;AARD,KADN;AAAA,eAYGV,KAAK,CAACW,OAAN,CAAcC,IAZjB,wBAaE,QAAC,UAAD;AAAY,MAAA,EAAE,EAAE;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAhB;AAA2B,MAAA,OAAO,EAAEZ,SAAS,CAACH,eAA9C;AAA+D,MAAA,KAAK,EAAC,SAArE;AAAA,gBACGE,KAAK,CAACW,OAAN,CAAcC,IAAd,KAAuB,MAAvB,gBAAgC,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAAhC,gBAAsD,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADzD;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAtBQb,K;UACOR,Q;;;KADPQ,K;AAwBT,eAAe,SAASe,QAAT,GAAoB;AAAA;;AACjC,QAAM,CAACF,IAAD,EAAOG,OAAP,IAAkB3B,KAAK,CAAC4B,QAAN,CAAe,OAAf,CAAxB;AACA,QAAMf,SAAS,GAAGb,KAAK,CAAC6B,OAAN,CAChB,OAAO;AACLnB,IAAAA,eAAe,EAAE,MAAM;AACrBiB,MAAAA,OAAO,CAAEG,QAAD,IAAeA,QAAQ,KAAK,OAAb,GAAuB,MAAvB,GAAgC,OAAhD,CAAP;AACD;AAHI,GAAP,CADgB,EAMhB,EANgB,CAAlB;AASA,QAAMlB,KAAK,GAAGZ,KAAK,CAAC6B,OAAN,CACZ,MACExB,WAAW,CAAC;AACVkB,IAAAA,OAAO,EAAE;AACPC,MAAAA;AADO;AADC,GAAD,CAFD,EAOZ,CAACA,IAAD,CAPY,CAAd;AAUA,sBACE,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAEX,SAAlC;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAED,KAAtB;AAAA,6BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;IA5BuBc,Q;;MAAAA,Q","sourcesContent":["import * as React from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport Box from '@mui/material/Box';\nimport { useTheme, ThemeProvider, createTheme } from '@mui/material/styles';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\n\nconst ColorModeContext = React.createContext({ toggleColorMode: () => {} });\n\nfunction MyApp() {\n  const theme = useTheme();\n  const colorMode = React.useContext(ColorModeContext);\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        bgcolor: 'background.default',\n        color: 'text.primary',\n        borderRadius: 1,\n        p: 3,\n      }}\n    >\n      {theme.palette.mode} mode\n      <IconButton sx={{ ml: 1 }} onClick={colorMode.toggleColorMode} color=\"inherit\">\n        {theme.palette.mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n      </IconButton>\n    </Box>\n  );\n}\n\nexport default function Darkmode() {\n  const [mode, setMode] = React.useState('light');\n  const colorMode = React.useMemo(\n    () => ({\n      toggleColorMode: () => {\n        setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\n      },\n    }),\n    [],\n  );\n\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode,\n        },\n      }),\n    [mode],\n  );\n\n  return (\n    <ColorModeContext.Provider value={colorMode}>\n      <ThemeProvider theme={theme}>\n        <MyApp />\n      </ThemeProvider>\n    </ColorModeContext.Provider>\n  );\n}"]},"metadata":{},"sourceType":"module"}